<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>李攀攀</title>
  
  <subtitle>李攀攀的博客</subtitle>
  <link href="http://blog.lipanpanx.com/atom.xml" rel="self"/>
  
  <link href="http://blog.lipanpanx.com/"/>
  <updated>2022-04-11T03:41:31.970Z</updated>
  <id>http://blog.lipanpanx.com/</id>
  
  <author>
    <name>李攀攀</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JS模块化</title>
    <link href="http://blog.lipanpanx.com/post/2020/202010/JS%E6%A8%A1%E5%9D%97%E5%8C%96"/>
    <id>http://blog.lipanpanx.com/post/2020/202010/JS%E6%A8%A1%E5%9D%97%E5%8C%96</id>
    <published>2022-01-24T10:49:33.000Z</published>
    <updated>2022-04-11T03:41:31.970Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>CSS intrinsic and extrinsic sizing</title>
    <link href="http://blog.lipanpanx.com/post/2021/202104/CSS-intrinsic-and-extrinsic-sizing-specification"/>
    <id>http://blog.lipanpanx.com/post/2021/202104/CSS-intrinsic-and-extrinsic-sizing-specification</id>
    <published>2022-01-03T10:25:22.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    <content type="html"><![CDATA[<p>参考文档:</p><p><a href="https://developer.mozilla.org/en-US/docs/Glossary/Intrinsic_Size" target="_blank">Intrinsic size</a><br><a href="https://www.w3.org/TR/css-sizing-3/#intrinsic-sizes" target="_blank">CSS Box Sizing Level 3(WD-&gt;CR) Intrinsic Size Determination</a></p><p>Extrinsic sizing 根据元素的上下文确定大小，而不考虑元素的内容。<br>Intrinsic sizing 调整根据元素的内容确定大小，而不考虑其上下文。</p><h2 id="2-terminology(相关术语)">2 Terminology(相关术语)<a title="#2-terminology(相关术语)" href="#2-terminology(相关术语)"></a></h2><p>size block-size inline-size:<br>尺寸 就是我们常说的 width/height<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/X8s3lzn.png" alt="" loading="lazy"></p><p>inner size: The content-box size of a box.<br>outer size: The margin-box size of a box.<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/1AiYiFm.png" alt="" loading="lazy"></p><p>definite size : 无需真实布局就能解析出来的大小<br>indefinite size: 不确定的大小<br>available space: 表示放置box的空间的大小，由它参与的格式化上下文的规则决定。一个盒子的可用空间通常要么是它所包含的块的尺寸(如果box大小是确定的)，要么是一个无限的大小(如果box大小是不确定的)。可用空间既可以是<code>min-content constraint</code>，也可以是<code>max-content constraint</code>，这将迫使放置在其中的box 按照该约束进行布局。</p><h2 id="2.1.-auto-box-sizes">2.1. Auto Box Sizes<a title="#2.1.-auto-box-sizes" href="#2.1.-auto-box-sizes"></a></h2><p>CSS中有四种自动确定的size类型<br>当你给定某个尺寸为auto的时候 可以根据这些size和上下文 确定 这个大小为auto的尺寸渲染到UI上的具体值</p><p>stretch-fit size<br>stretch-fit inline size<br>stretch-fit block size</p><p>max-content size: 如果给定一个无限的可用空间 一个box 在给定轴上的 理想大小.<br>max-content inline size : 一个box 在 inline轴 上的理想大小<br>max-content block size : 一个box 在 block轴 上的理想大小</p><p>min-content size : 确保盒子中内容不会溢出的最小尺寸<br>min-content inline size: 在inline轴上确保盒子不会溢出的最小尺寸<br>min-content block size: 在 block轴上 确保盒子不会溢出的最小尺寸</p><p>fit-content size: 如果 给定轴上的可用空间一定定义好了等于 clamp(min-content size, stretch-fit size, max-content size) 则盒子的大小比 min-content constraint 小的时候 fit-content size 等于 min-content size 否则 等于 max-content size.<br>fit-content inline size:<br>fit-content block size:</p><p>intrinsic size<br>内在尺寸 可以是 min-content size 也可以是 max-content size,就是指由内容大小产生的size<br>这个术语的某些用法也可指主要从这两种大小之一派生出来的大小<br>Replaced elements 通常从 natural dimensions 获得他们的 intrinsic size.</p><h2 id="2.2.-intrinsic-size-contributions">2.2. Intrinsic Size Contributions<a title="#2.2.-intrinsic-size-contributions" href="#2.2.-intrinsic-size-contributions"></a></h2><p>max-content contribution :<br>min-content contribution<br>intrinsic size contribution</p><h2 id="2.3.-intrinsic-size-constraints">2.3. Intrinsic Size Constraints<a title="#2.3.-intrinsic-size-constraints" href="#2.3.-intrinsic-size-constraints"></a></h2><p>max-content constraint:<br>min-content constraint:<br>preferred aspect ratio:</p><h2 id="5.1.-intrinsic-sizes">5.1. Intrinsic Sizes<a title="#5.1.-intrinsic-sizes" href="#5.1.-intrinsic-sizes"></a></h2><p>The min-content size of a box in each axis is the size it would have if it was a float given an auto size in that axis (and no minimum or maximum size in that axis) and if its containing block was zero-sized in that axis.<br>(In other words, the minimum size it has when sized as “shrink-to-fit”.)</p><p>一个 box的  min-content size</p><h2 id="5.2.-intrinsic-contributions">5.2. Intrinsic Contributions<a title="#5.2.-intrinsic-contributions" href="#5.2.-intrinsic-contributions"></a></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考文档:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Intrinsic_Size&quot; target=&quot;_blank&quot;&gt;Intrinsic size&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>CSS Grid布局当中的grid-template-columns/rows/areas</title>
    <link href="http://blog.lipanpanx.com/post/2021/202104/CSS-Grid%E5%B8%83%E5%B1%80%E5%BD%93%E4%B8%AD%E7%9A%84grid-template"/>
    <id>http://blog.lipanpanx.com/post/2021/202104/CSS-Grid%E5%B8%83%E5%B1%80%E5%BD%93%E4%B8%AD%E7%9A%84grid-template</id>
    <published>2022-01-02T10:11:10.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    <content type="html"><![CDATA[<p>grid-template/</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;grid-template/&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>OBS 录制屏幕的指定区域</title>
    <link href="http://blog.lipanpanx.com/post/2021/202112/OBS-%E5%BD%95%E5%88%B6%E5%B1%8F%E5%B9%95%E7%9A%84%E6%8C%87%E5%AE%9A%E5%8C%BA%E5%9F%9F"/>
    <id>http://blog.lipanpanx.com/post/2021/202112/OBS-%E5%BD%95%E5%88%B6%E5%B1%8F%E5%B9%95%E7%9A%84%E6%8C%87%E5%AE%9A%E5%8C%BA%E5%9F%9F</id>
    <published>2021-12-27T11:19:10.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    <content type="html"><![CDATA[<p>OBS 默认情况下是 录制全屏的 其实它也是可以录制屏幕的指定区域的只是需要简单的设置而已:</p><p>首先用鼠标点击 选中录屏的预览框  选中之后 录屏预览框周围会出现  红色的操作手柄, 然后按住alt 再通过鼠标 拖动周围的操作手柄 就能够控制 录制视频的区域了<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/PRMjXsk.png" alt="" loading="lazy"></p><p>虽然这一波操作之后确实可以录制  屏幕的指定区域  但是有可能会让录制的视频出现非常大 的黑边</p><p>这个时候可以通过 调整基础画布来解决这个问题<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/6SdRRSv.png" alt="" loading="lazy"></p><p>一般情况下基础画布的分辨率为  <code>1920*1080</code>, 这个时候如果你选定的屏幕分辨率为 <code>1080*1920</code> 这个时候就会出现画布和录制区域的宽度和高度严重不匹配的情况 对于超出的高度可以通过压缩来解决  但是对于不足的底部宽度 只能填充黑边 这就是黑边产生的原因了  所以要去除黑边 我们可以 通过调整画布的分辨率 来实现, 如果录制的区域 宽度和高度为更接近16:9 我们就选择基础(画布)分辨率为 <code>1920*1080</code> 如果宽度和高度比更接近9:16 则我们选择 基础(画布)分辨率为 <code>1080*1920</code>, 只要宽高比是接近的 通过缩放操作 总能够去除黑边.</p><p>一般情形下 基础(画布)分辨率就是我们的输出文件的分辨率, 但是我们仍然可以通过下面的哪个  输出(缩放)分辨率选择框 进一步调整输出文件的分辨率, 通过适当的缩放算法 对基础画布的内容进行缩放  可以实现控制文件大小的目的.</p><p>此外OBS录屏的时候 视频格式尽量选择MKV格式, 这种格式可以进行意外恢复 也可以多音轨录制, 录制完成之后 OBS也提供快速的格式转换功能 可以快速把MKV转换成为MP4<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/uxKDIYk.png" alt="" loading="lazy"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;OBS 默认情况下是 录制全屏的 其实它也是可以录制屏幕的指定区域的只是需要简单的设置而已:&lt;/p&gt;
&lt;p&gt;首先用鼠标点击 选中录屏的预览框  选中之后 录屏预览框周围会出现  红色的操作手柄, 然后按住alt 再通过鼠标 拖动周围的操作手柄 就能够控制 录制视频的区域了&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Grid template areas</title>
    <link href="http://blog.lipanpanx.com/post/2021/202104/Grid-template-areas"/>
    <id>http://blog.lipanpanx.com/post/2021/202104/Grid-template-areas</id>
    <published>2021-12-24T10:07:13.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Grid_Template_Areas" target="_blank">参考资料</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Grid_Template_Areas&quot; target=&quot;_blank&quot;&gt;参考资料&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="CSS相关" scheme="http://blog.lipanpanx.com/categories/CSS%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>Box alignment in CSS Grid Layout</title>
    <link href="http://blog.lipanpanx.com/post/2021/202104/Box-alignment-in-CSS-Grid-Layout"/>
    <id>http://blog.lipanpanx.com/post/2021/202104/Box-alignment-in-CSS-Grid-Layout</id>
    <published>2021-12-22T10:23:46.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Box_Alignment_in_CSS_Grid_Layout" target="_blank">相关参考文档</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Box_Alignment_in_CSS_Grid_Layout&quot; target=&quot;_blank&quot;&gt;相关参考文档&lt;/a&gt;&lt;/p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hexo+Inside+Github+(NetlifyCMS+Vercel+Cloudflare)构建全球可高速访问的静态站点</title>
    <link href="http://blog.lipanpanx.com/post/2021/202111/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F"/>
    <id>http://blog.lipanpanx.com/post/2021/202111/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F</id>
    <published>2021-11-16T07:27:20.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x10-前情提要">0x10 前情提要<a title="#0x10-前情提要" href="#0x10-前情提要"></a></h2><p>我的博客一直以来都是静态的站点,静态的站点优点还是很多的,很多地方提供免费的托管服务,访问速度快,搜索引擎友好,等等. 但是有优点就有缺点,静态站点的缺点也很明显,无法承载过于复杂的功能,就个人博客而言,如果做成动态网站有管理后台的那种的话就可以随时随地写文章更新文章了,想对文章进行更改校对,任何一个有网的地方登陆后台就可以操作其实还是很爽的,所以我决定给我的静态站点添加一个后台管理系统就是netlifyCMS,这个netlifyCMS是netlify公司的产品, 这个东西可以让你方便的在线 管理 书写 发布你的文章,我尝试了一下效果还是不错的.</p><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/nSJwqhi.png" alt="" loading="lazy" class="φbp"></p><h2 id="0x20-在netlify中部署使用netlifycms">0x20 在netlify中部署使用netlifyCMS<a title="#0x20-在netlify中部署使用netlifycms" href="#0x20-在netlify中部署使用netlifycms"></a></h2><h3 id="0x21-静态站点部署到netlify">0x21 静态站点部署到netlify<a title="#0x21-静态站点部署到netlify" href="#0x21-静态站点部署到netlify"></a></h3><p>因为 netlifyCMS是netlify公司的展品, 刚开始我不知道我还以为要想使用netlifyCMS就必须把站点放到netlify上面去才行,于是就开始折腾netlify,其实把站点放到netlify上还是比较简单的,我这里简单的讲一下:</p><ol><li>首先注册netlify账号 因为它可以使用第三方账号进行注册,我的项目都在githu上我就选择了直接用github账号进行注册</li><li>然后就是选择git仓库创建网站,这里也很简单 按照它的提示一步步来就醒了 总共三步<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/zqzMPur.png" alt="" loading="lazy"><br>最后一步这里 你可以选择git仓库的分支, 可以设置安装依赖和运行构建命令的目录, 以及最后保存静态文件部署静态站点的文件夹,当然 这里也可以 设置环境变量 设置serverless 函数的文件夹 不过我们用不着 这两个也就不用管它了.</li></ol><blockquote><p>这里有个非常蛋疼的点 就是这里可以选择一个目录 作为你安装依赖和运行构建命令的目录,但是如果我的项目当中 包含了一个子项目 需要多处安装依赖,然后需要多处运行构建命令呢? 我不知道针对套娃项目 如何在netlify中部署 至少我暂时没有看到设置的地方. 这一点我觉得vercel就做到很好,在vercel当中你可以自己去设置安装依赖和构建项目的命令,这样的话对于需要多处安装依赖的项目你直接可以把命令写在packge.json的scripts当中 然后提交给vercel一个运行script的命令就行了 比如你的script设置成为<code>&quot;vercel_install&quot;: &quot;npm install &amp;&amp; cd themes/inside &amp;&amp; npm install&quot;</code>,然后把 <code>npm run vercel_install</code> 提交给vercel就行了.</p></blockquote><ol start="3"><li>最后选择 <code>deploy site</code>,就能把你的网站部署到netlify上面了,是不是很简单</li></ol><h3 id="0x22-netlify当中使用netlifycms">0x22 netlify当中使用netlifyCMS<a title="#0x22-netlify当中使用netlifycms" href="#0x22-netlify当中使用netlifycms"></a></h3><p>1, 首先进入到你的站点 然后点击 <code>site setting</code>进入到你的网站的设置页面,就可以看到一条长长的网站设置菜单<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/NnGGuTC.png" alt="" loading="lazy"><br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/CVirQ5w.png" alt="网站设置菜单" loading="lazy"></p><p>2, 我们看到网站的设置页面有很多的选项可以设置,我们首先打开身份验证服务,选择<code>identity</code>然后点击<code>enable identity</code>即可<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/jKzVzyd.png" alt="" loading="lazy"><br>开通身份验证服务之后 identity菜单会增加很多的可配置项, 在registration当中我们可以配置为仅仅我们邀请的注册用户才能访问netlifyCMS,在Services当中我们可以配置打开Git Gateway服务,这样一来netlifyCMS就有权读写我们的仓库了.<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/18Wqeya.png" alt="" loading="lazy"></p><p>3, 既然后端的验证服务有了我们就需要前端的身份验证页面,前端的验证页面也很简单<br>对于hexo框架而言 首先在项目根目录的 <code>/source</code>文件夹下面创建admin文件夹 然后里面放上两个文件<code>index.html</code> 和 <code>config.yml</code>,其中index.html是前端验证页面的入口,config.yml是 netlifyCMS的配置文件,netlifyCMS可以根据这个配置文件来确定以怎样的方式去读取和操作你的文章<br>我们直接在index.html 中添加下面的代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Content Manager<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://identity.netlify.com/v1/netlify-identity-widget.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Include the script that builds the page and powers Netlify CMS --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/netlify-cms@^2.0.0/dist/netlify-cms.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这段代码就是加载两个js文件,一个用来渲染CMS的页面一个用来进行身份验证<br>因为我们最终需要 通过 <code>lipanpanx.com/admin/</code> 去访问到CMS, 所以admin文件夹最终会被放到hexo所生成的网站的根目录当中,为了避免hexo对admin文件夹进行过多的操作,我们在hexo的配置文件的 <code>skip_render</code>字段当中添加<code>- admin/**</code>,确保hexo不对admin文件夹当中的内容进行渲染.</p><p>4, 当我们完成前端验证页面入口的添加之后, 把站点部署到 netlify上面然后我们访问自己的站点后面加上/admin/也就是 <code>xxx.com/admin/</code>,就能通过netlify账户进行登陆了,但是这个netlify用户必须是自己邀请的用户(刚才在identity-&gt;registration哪里设置了仅邀请的用户才可以登陆),邀请用户其实也是非常简单的,只需要找到网站实例设置下的 identity页面 点击<code>invite users</code>按钮输入邮箱地址就行了.<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/UMcdrGe.png" alt="" loading="lazy"></p><p>5, 登陆账户之后就能看到后台管理的页面了,但是目前的后台管理系统空空如也,需要合理的设置<code>/source/admin/config.yml</code>文件,才能够让自己的后台管理系统正常的工作:<br>我在 netlifyCMS的官方文档当中找到了 <a href="https://cms-demo.netlify.com/#/collections/posts" target="_blank">官方的demo</a> 和 <a href="https://github.com/netlify/netlify-cms/blob/master/dev-test/config.yml" target="_blank">官方demo的配置文件</a>,这两个东西对于想要自己写配置文件的同学是非常重要的参考. 想要进一步学习如何配置netlifyCMS的同学可以看看下面的内容:</p><p>关于 netlifyCMS的配置文件<code>/source/admin/config.yml</code>中各个配置项应该如何配置, 官方文档中的 <code>configuring your site</code> 章节进行了详细的讲解,这一章节又分为两个小节,其中 <a href="https://www.netlifycms.org/docs/configuration-options/" target="_blank"><code>configuration options</code></a>小节中包含了所有我们常用的配置, <a href="https://www.netlifycms.org/docs/beta-features/" target="_blank"><code>beta features</code></a>小节的大部分功能一般用不到,但是也有一小部分是非常有用的. 我这里主要讲解一下 <code>configuring your site</code>小节当中的内容:</p><p>config.yml 文件当中有12个根配置项,这12个根配置项目当中又有3个配置项是必须要有的,分别是: <code>backend</code> <code>media_folder</code> <code>collections</code>, config.yml文件当中至少要包含这三个配置,其他的配置项是可有可无的,这里我先给出一个配置的example,然后再结合代码注释讲解一下这几个配置的作用:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">backend:</span> <span class="comment"># 这个backend实际上就是个中间商它允许你的netlifyCMS和提供内容存储服务的第三方进行通信 这里按照netlifyCMS的文档要求设置即可 如果使用自定义的backend 按照backend要求配置即可</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">git-gateway</span> <span class="comment"># netlifyCMS的一个开源项目 允许你在netlifyCMS当中操作git仓库, 默认使用 netlify identity服务进行合法用户的认证</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span> <span class="comment"># 指定被操作的git仓库的分支 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># local_backend: true  #解除这个注释运行npx netlify-cms-proxy-server 然后再运行hexo s 就能本地调试netlifyCMS </span></span><br><span class="line"></span><br><span class="line"><span class="attr">media_folder:</span> <span class="string">&#x27;source/images&#x27;</span>  <span class="comment"># netlifyCMS提供了上传文件的功能,可以把本地的文件上传到网站的根目录当中这个选项可以控制上传文件的路径</span></span><br><span class="line"><span class="comment"># public_folder: &#x27;/images&#x27;  # 这里控制 网页中引用上传资源时候的路径</span></span><br><span class="line"><span class="comment"># publish_mode: editorial_workflow  # 这里控制是否使用netlifyCMS 提供的工作流</span></span><br><span class="line"></span><br><span class="line"><span class="attr">collections:</span>  <span class="comment"># collections下面可以有多个collection 每个collection都必须有一个name 且这个name不能够重复</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;posts&quot;</span>  <span class="comment"># 必须存在的字段,名字任意 不能重复,这个name并不会显示在netlifyCMS的UI当中</span></span><br><span class="line">    <span class="attr">label:</span> <span class="string">&quot;2021&quot;</span>  <span class="comment"># 在 netlifyCMS当中collection 显示的名字 </span></span><br><span class="line">    <span class="attr">folder:</span> <span class="string">&quot;source/_posts/2021&quot;</span> <span class="comment"># 你的文章所存储的路径 </span></span><br><span class="line">    <span class="attr">sortable_fields:</span> [<span class="string">&#x27;date&#x27;</span>]  <span class="comment"># 控制那些字段用来给文章排序</span></span><br><span class="line">    <span class="attr">create:</span> <span class="literal">true</span>  <span class="comment"># 是否允许在netlifyCMS中创建新的文章</span></span><br><span class="line">    <span class="attr">editor:</span></span><br><span class="line">      <span class="attr">preview:</span> <span class="literal">true</span> <span class="comment"># 在netlifyCMS中写文章和时候是否允许打开预览窗口 </span></span><br><span class="line">    <span class="attr">fields:</span> <span class="comment"># 每篇文章头部的 front-matter 都可以设置与其相对应的widget,在netlifyCMS就可以使用widget设置文章头部的front-matter</span></span><br><span class="line">      <span class="bullet">-</span> &#123;<span class="attr">label:</span> <span class="string">&quot;Title&quot;</span>, <span class="attr">name:</span> <span class="string">&quot;title&quot;</span>, <span class="attr">widget:</span> <span class="string">&quot;string&quot;</span>&#125;</span><br><span class="line">      <span class="bullet">-</span> &#123;<span class="attr">label:</span> <span class="string">&quot;Publish Date&quot;</span>, <span class="attr">name:</span> <span class="string">&quot;date&quot;</span>, <span class="attr">widget:</span> <span class="string">&quot;datetime&quot;</span>, <span class="attr">format:</span> <span class="string">&quot;YYYY-MM-DD HH:mm:ss&quot;</span>, <span class="attr">dateFormat:</span> <span class="string">&quot;YYYY-MM-DD&quot;</span>, <span class="attr">timeFormat:</span> <span class="string">&quot;HH:mm:ss&quot;</span>, <span class="attr">required:</span> <span class="literal">false</span>&#125;</span><br><span class="line">      <span class="bullet">-</span> &#123;<span class="attr">label:</span> <span class="string">&quot;Updeted Date&quot;</span>, <span class="attr">name:</span> <span class="string">&quot;updated&quot;</span>, <span class="attr">widget:</span> <span class="string">&quot;datetime&quot;</span>, <span class="attr">format:</span> <span class="string">&quot;YYYY-MM-DD HH:mm:ss&quot;</span>, <span class="attr">required:</span> <span class="literal">false</span>&#125;</span><br><span class="line">      <span class="bullet">-</span> &#123;<span class="attr">label:</span> <span class="string">&quot;Tags&quot;</span>, <span class="attr">name:</span> <span class="string">&quot;tags&quot;</span>, <span class="attr">widget:</span> <span class="string">&quot;list&quot;</span>, <span class="attr">required:</span> <span class="literal">false</span>&#125;</span><br><span class="line">      <span class="bullet">-</span> &#123;<span class="attr">label:</span> <span class="string">&quot;Categories&quot;</span>, <span class="attr">name:</span> <span class="string">&quot;categories&quot;</span>, <span class="attr">widget:</span> <span class="string">&quot;list&quot;</span>, <span class="attr">required:</span> <span class="literal">false</span>&#125;</span><br><span class="line">      <span class="bullet">-</span> &#123;<span class="attr">label:</span> <span class="string">&quot;Body&quot;</span>, <span class="attr">name:</span> <span class="string">&quot;body&quot;</span>, <span class="attr">widget:</span> <span class="string">&quot;markdown&quot;</span>, <span class="attr">required:</span> <span class="literal">false</span>&#125;</span><br></pre></td></tr></table></figure><p>其实 collections 又分为 <code>folder collections</code> 和 <code>file collections</code> 这两者的区别在官方文档的<a href="https://www.netlifycms.org/docs/collection-types/" target="_blank">collections types</a>进行了详细的说明,我这里就不在赘述, 因为我需要在一个collection中管理多篇格式相同的文章所以我使用folder collections,关于collection下面的各种widget的应该如何配置 查看官方文档可以得到更加详细的信息.</p><p>这些内容全部做完之后,只要我们更新代码然后提交到github,就能触发netlify去构建我们的项目生成网站的静态文件并进行部署,我们通过netlify提供的临时域名就能够访问我们的站点了, 然后我们通过在域名后面添加 /admin/ 就能够访问netlifyCMS了,在netlifyCMS当中可以随意的添加删除文章.会自动同步到github仓库,如果此时我们还想要在本地写文章的话,在本地写之前可以先和remote仓库进行同步,把remote仓库中的内容拉下来之后可以继续写不会和netlifyCMS有所冲突. 这样看起来一切都挺好的,这篇文章已经可以结束了, 但是经过我的试用我发现把博客放在 netlify的速度奇慢无比, 甚至不如我之前放在 github pages 用cloudflare cdn 加速来的快, 加载一个网页需要 3-4秒钟, 这谁受得了啊, 于是我就开始在网上进行了一番搜索, 终于我找到了一篇神奇的文章, 文章的作者也是苦于netlify的速度非常的慢最后通过把博客部署在vercel上面加快了博客的访问速度,还给出了访问速度的对比结果:<a href="https://opnir.cn/2020/11/netlify-vs-vercel-for-static-websites-speed.html" target="_blank">点击此处查看</a>. 但是我是需要使用netlifyCMS的呀, 如果单纯的把博客部署在vercel上面对我来说并没有任何的意义, 所以我搜了一下结果发现 netlifyCMS还真的能够在 vercel上面使用,真的是太棒了 这样依赖既能够使用netlifyCMS又能增加博客的访问速度 何乐而不为呢.</p><h2 id="0x30-在vercel上面部署和使用netlifycms">0x30 在Vercel上面部署和使用netlifyCMS<a title="#0x30-在vercel上面部署和使用netlifycms" href="#0x30-在vercel上面部署和使用netlifycms"></a></h2><h3 id="0x31-netlifycms是如何运作的?">0x31 netlifyCMS是如何运作的?<a title="#0x31-netlifycms是如何运作的?" href="#0x31-netlifycms是如何运作的?"></a></h3><p>要想在vercel上面使用netlifyCMS,就要搞清楚这东西是如何运作的,之前我们也提到了在我们访问<code>xxx.com/admin/</code>的时候 <code>/source/admin/index.html</code>会被加载,这个hmtl文件中的内容 就是引入两个JS文件,一个负责页面的渲染,一个负责用户认证, 所以netlifyCMS的最核心的功能其实就是这两个, 页面渲染靠前端的JS能够完成,而用户认证一般情况下需要靠后端配合来完成,那么netlifyCMS是如何在无后端的情况下实现的呢? 其实netlifyCMS之所以能够完成用户认证其实是使用了第三方的认证服务,一般情况下我们可以使用serverless函数和第三方的认证服务进行对接,对于serverless函数的指定是在 <code>/source/admin/config.yml</code>文件当中<code>backend</code>字段进行配置的,其实netlifyCMS的<a href="https://www.netlifycms.org/docs/backends-overview/" target="_blank">文档</a>中也说的非常清楚了:<code>A backend is JavaScript code that allows Netlify CMS to communicate with a service that stores content - typically a Git host</code>,当我们在netlify中使用netlifyCMS的时候, 经过合适的配置之后netlify中的serverless函数会在用户请求登陆的时候加载然后和netlify的用户认证服务进行通信判断用户的合法性, 所以在vercel中使用netlifyCMS我们也可以使用serverless函数去 和第三方的认证服务去通信(比如github的oauth)进行用户合法性的认证. 那么接下来的问题就是 如何实现这些serverless函数并且在vercel当中进行调用呢,这其实是一个头疼的问题,不过好在我们有万能的github.</p><p>其实netlifyCMS是一个开源的东西: <a href="https://github.com/netlify/netlify-cms" target="_blank">github仓库地址</a>,对于如何实现自己的的backend,虽然在netlifyCMS的官方文档中没有进行说明,不过在这个开源仓库当中的package文件夹当中 还是给出了大量可供参考的代码的,不过只读代码还是有点苦涩的.还好在国外有大佬已经实现了可以在vercel上部署的使用GitHub oauth 认证服务的demo了: <a href="https://github.com/ublabs/netlify-cms-oauth" target="_blank">仓库地址</a>, 简直太令人感动了.</p><h3 id="0x32-在vercel中部署使用netlifycms">0x32 在Vercel中部署使用netlifyCMS<a title="#0x32-在vercel中部署使用netlifycms" href="#0x32-在vercel中部署使用netlifycms"></a></h3><p>把国外大佬的仓库clone到本地,对于还没有创建hexo项目的用户可以直接在这里仓库里面创建hexo项目,直接用就完了<br>对于已经创建hexo项目的用户只需要 把demo当中的 /api 和 /lib 两个文件夹和 vercel.json 拷贝到字节的hexo项目的根目录,然后找到package.json文件当中的3个依赖合并到自己hexo项目的package.json文件当中去就行了.</p><p>完成上面的操作之后 再去配置 <code>/source/admin/config.yml</code>文件当中的<code>backend</code>字段:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">backend:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">github</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">lipanpan-hub/xsite</span>      <span class="comment"># github仓库地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span>                <span class="comment"># 选择仓库分支</span></span><br><span class="line">  <span class="attr">base_url:</span> <span class="string">https://xsite-sage.vercel.app/</span>  <span class="comment"># 这个可以先留空等到vercel部署完成之后得到链接 再填写</span></span><br><span class="line"><span class="comment"># config.yml 文件的其他配置 照旧填写 </span></span><br></pre></td></tr></table></figure><p>然后把你的项目部署到vercel上面 得到临时域名 把这个域名填写到backend-&gt;base_url处<br>然后 打开 github的 <a href="https://github.com/settings/developers" target="_blank">develop setting</a> 点击 <code>oauth apps</code> 再点击 <code>new oauth app</code> 进入下面的页面:<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/YjqnKWN.png" alt="" loading="lazy"></p><p>这张表单有三个必填项: 第一个application name 随便填写, 第二个hompage URL填写为刚到得到的 vercel临时域名,第三个authorization callback URL填写为刚才的临时域名后面再添加/callback:<code>vercel临时域名/callback</code> 然后点击<code>register application</code>成功注册程序之后,拿到<code>clinet ID</code> 和 <code>client secret</code>, 其中client secret 需要你点击 <code>generate a new clinet secret</code> 按钮去生成.</p><p>拿到 <code>client ID</code> 和 <code>client secret</code> 之后 进入vercel 你的网站项目 然后再项目主页点击 <code>settings-&gt;enviroment variables</code> 添加两个环境变量 分别是:<code>OAUTH_GITHUB_CLIENT_ID</code> 和 <code>OAUTH_GITHUB_CLIENT_SECRET</code>, 这两个环境变量的值就是刚才得到的<code>client ID</code> 和 <code>client secret</code>.</p><p>然后在vercel上重新部署你的网站项目就可以了.重新部署完成之后打开vercel提供的临时域名你就可以访问自己的站点了,同时在这个域名后面加入/admin/ 你就能访问文章管理后台页面了 这个页面使用github进行登陆认证.</p><p>然而有些同学会在这里遇到一个奇怪的问题,就是访问/admin/页面的时候会得到一个错误的提示:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Error</span> loading the CMS configuration</span><br><span class="line">Config Errors:</span><br><span class="line"><span class="built_in">Error</span>: Failed to load config.yml (<span class="number">404</span>)</span><br><span class="line">Check your config.yml file.</span><br></pre></td></tr></table></figure><p>下面我说一下我的解决方法:</p><is-cipher placeholder="">U2FsdGVkX1/KqQJzWiAXXQWZ5+ztaetjDVEts7Ijrrx/wMQ5G9lmO9oHvKvtl2Tx1SDLC+ty2UWPS+KZfyutoHMg1jpEjOYHKF6t7BghUjHGPApImSolzPiLm3F/zgB4ECIHgyuzvGJZsU26WhnA9flCNr8CnI8QWWJih+0YslUCP2Ca56MK3ktvPHhYG6wzj7jJd4E77yYvoyzNaGpgWzRFEePHMgo8inb4yzTw7UiDIp8YTajIu0O1DoMdw1hJJHMhGGzUtNEKgXyumXeJnSIyQ0tjOb9VIsbgPEGoCJJtaiMK2/PQK1Y44uckN3inEbTrHhXT1CqU+hb5n5b9pS0eyW+UQQFzr8wL922bOrnGJoS/2uqVftlyXHveCJ89oy2Q7RlrAOdMbjQiC4OwMroVCiDJfqmI/W3uVdL//tyBWYSwFPlq+Es5iJVCQ49je4cpHeg2SMUY5ZMax5pvmT657ZzAWtKhKHHMWGLnXjxD4QW+60ZCRAyUyO/bvxJ8sCbFRI/9cEC6o46EGvZZeDIRmmFG5025+Vm5D3B3C1rRKxZNsyIqLwWHnlvl//VkyC7lSWg22faoiSiXJxbVVfFJGudAG2cA4iyC3iV3uf71Ewk6jZDNlg9lhDyASjn3JoWZ6jpZR3y2Kzfv3DsXmShHK1bbMDSQOgTtwyw5+q02BMRpXP+0fzSmj4Yy16hbUWrWlBriQrzt2p/VKL5miGFpfF14Jxx0aJdp7lPX/UfWI+iTENQUJwxeMCuIO/s0BA2xeAgpqxAxmrdFQxrKiMn5OC8585/p/pLAEA1YzEbVjk7dYFgoHJhropOPbT/91CFDVtUZu6c0x0HhnJLxKJag8aSOCJLKOxLYWnbhbBbws9kFg5/A+bFtOuk1PpdUe+d/+SFKvP10bQvQXKdI2orsYsIFzaHK39ZoHqswQR1AAJs9UTnEO7P41HSBrrJFFqQ8tYn4Q24hlQdYCRbrrw20wqCkCYtp5C0S+KyJBEKuivvjkEmlJfORwu04vHGqD7poJn6CIJtKTTKIYt0cdq5a2fCy79PeBBb8N/BZhMr2Zs45Vx3j226mgnbeGOAC9Vo4OuULveRSikc/SCxsU7XWu8PLJKpGVSbqP29X0qs9Njlc79mUsgB4Q/HodgCJmw+kDPo9r0/z9jiuxMyqbg1TofAhdh+Cuf9QRDrIBqJ+hZdVOuIQiN7YALY2dh0yXKyIQfMQrB1l01/drmeJqiQtu81KiY0fyqhO7Olb2nAj+/ye2mORf/Xgnn5DCaGW/aFhS8/im5bbHCv+5NnGKsu2zJBgggC1/O30UeO4Oe6ThFxM732sHp3jFn09Xs2h6phwF8+maALvqXg/YD6/tSDVaQ817JzCM0dB75IMdwg=</is-cipher><h2 id="自定义域名">自定义域名<a title="#自定义域名" href="#自定义域名"></a></h2><p>当我们的 在vercel上成功的部署项目之后,访问速度确实加快了,而且新添加的netlifyCMS也确实挺好用,但是访问的时候使用的是vercel的临时域名,这个域名非常的长太难记忆了而且都是乱码组成的根本拿不出手啊, 所以绑定一个专业的域名还是非常有必要的, 对于刚申请的域名直接把nameserver设置为vercel的nameserver然后绑定就能用了,但是我并不想要这么干,我只想把自己的域名放在cloudflare上面进行管理,然后配合vercel使用,原因有下面几个:</p><ul class="φbr" class="φbr" class="φbr" class="φbr"><li><input type="checkbox" disabled="" checked=""><i></i>首先我所有的域名都是放在cloudflare上面进行管理的 我不想要搞的东一个西一个很乱</li><li><input type="checkbox" disabled="" checked=""><i></i>然后更改nameserver需要时间 我不想等</li><li><input type="checkbox" disabled="" checked=""><i></i>之前vercel出现过在大陆访问不了的情况,对于这种情况如果以后再出现,就可以通过cloudflare代理访问,站点仍然可以正常部署在vercel</li><li><input type="checkbox" disabled="" checked=""><i></i>cloudflare 提供的各种网站安全 网站加速的功能 想用随时可以用</li></ul><p>打开 <a href="https://vercel.com/docs" target="_blank">vercel docs</a> 在顶部导航栏的 support 中我们可以找到一篇文章<a href="https://vercel.com/support/articles/using-cloudflare-with-vercel" target="_blank">How do I use a Cloudflare domain with Vercel?</a> 这篇文章详细的介绍了如何将 cloudfalre和 vercel配合使用进行自定义域名.</p><p>由于目前国内访问vercel的速度还是比较快的,所以我这里就讲一下不使用cloudflare代理的情况下如何为vercel项目绑定自定义域名:<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/KPZwzEi.png" alt="" loading="lazy"></p><p>在上图当中我在project settings 当中为项目绑定了两个地址 <code>lipanpanx.com</code> 和 <code>blog.lipanpanx.com</code> 要想要这两个地址生效,只需要在 cloudflare的dns设置当中 添加2条cname记录指向<code>cname.vercel-dns.com</code>,并且proxy status 设置为 <code>dns only </code>如下图所示:<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/ZMtyqOC.png" alt="" loading="lazy"></p><p>操作完cloudflare之后 回到vercel项目的project setting-&gt;domains 点击 <code>add</code>按钮 添加 <code>lipanpanx.com</code> 和 <code>blog.lipanpanx.com</code>就行了.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0x10-前情提要&quot;&gt;0x10 前情提要&lt;a title=&quot;#0x10-前情提要&quot; href=&quot;#0x10-前情提要&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;我的博客一直以来都是静态的站点,静态的站点优点还是很多的,很多地方提供免费的托管服务,访问速度快,搜索引擎友好,等等.</summary>
      
    
    
    
    <category term="其他" scheme="http://blog.lipanpanx.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>netlify-cli安装E404错误(找不到依赖项)解决</title>
    <link href="http://blog.lipanpanx.com/post/2021/202111/netlify-cli%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B"/>
    <id>http://blog.lipanpanx.com/post/2021/202111/netlify-cli%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B</id>
    <published>2021-11-09T10:46:46.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    <content type="html"><![CDATA[<p>今天打算安装 netlify-cli</p><p>于是打开 terminal 运行了一下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install netlify-cli -g </span><br></pre></td></tr></table></figure><p>结果 上来就是一顿错误</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">npm ERR! code E404</span><br><span class="line">npm ERR! <span class="number">404</span> Not Found - GET https:<span class="comment">//oss.npmmirror.com/netlify/-/netlify-8.0.4.tgz</span></span><br><span class="line">npm ERR! <span class="number">404</span></span><br><span class="line">npm ERR! <span class="number">404</span>  <span class="string">&#x27;netlify@https://registry.npm.taobao.org/netlify/-/netlify-8.0.4.tgz&#x27;</span> is not <span class="keyword">in</span> <span class="built_in">this</span> registry.</span><br><span class="line">npm ERR! <span class="number">404</span> You should bug the author to publish it (or use the name yourself!)</span><br><span class="line">npm ERR! <span class="number">404</span></span><br><span class="line">npm ERR! <span class="number">404</span> Note that you can also install <span class="keyword">from</span> a</span><br><span class="line">npm ERR! <span class="number">404</span> tarball, folder, http url, or git url.</span><br><span class="line"></span><br><span class="line">npm ERR! A complete log <span class="keyword">of</span> <span class="built_in">this</span> run can be found <span class="keyword">in</span>:</span><br><span class="line">npm ERR!     C:\Users\lipanpan\AppData\Local\npm-cache\_logs\<span class="number">2021</span>-<span class="number">11</span>-09T02_43_45_128Z-debug.log</span><br></pre></td></tr></table></figure><p>报错信息显示 无法在registry 当中找到 netlify-8.0.4.tgz</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">lipanpan&gt; npm view netlify versions</span><br><span class="line">[ ...省略若干</span><br><span class="line">  <span class="string">&#x27;6.1.10&#x27;</span>,       <span class="string">&#x27;6.1.11&#x27;</span>,       <span class="string">&#x27;6.1.13&#x27;</span>,       <span class="string">&#x27;6.1.14&#x27;</span>,       <span class="string">&#x27;6.1.15&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;6.1.16&#x27;</span>,       <span class="string">&#x27;6.1.17&#x27;</span>,       <span class="string">&#x27;6.1.18&#x27;</span>,       <span class="string">&#x27;6.1.19&#x27;</span>,       <span class="string">&#x27;6.1.20&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;6.1.21&#x27;</span>,       <span class="string">&#x27;6.1.22&#x27;</span>,       <span class="string">&#x27;6.1.23&#x27;</span>,       <span class="string">&#x27;6.1.24&#x27;</span>,       <span class="string">&#x27;6.1.25&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;6.1.26&#x27;</span>,       <span class="string">&#x27;6.1.27&#x27;</span>,       <span class="string">&#x27;6.1.28&#x27;</span>,       <span class="string">&#x27;6.1.29&#x27;</span>,       <span class="string">&#x27;7.0.0&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;7.0.1&#x27;</span>,        <span class="string">&#x27;8.0.0&#x27;</span>,        <span class="string">&#x27;8.0.1&#x27;</span>,        <span class="string">&#x27;8.0.2&#x27;</span>,        <span class="string">&#x27;8.0.3&#x27;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>我看了下确实没这个版本 最高版本就是8.0.3 但是这个包的最新版本(8.0.4)6天前已经在npm上面发布了<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/Qj0oEnI.png" alt="" loading="lazy"></p><p>因为我使用的是 淘宝的 npm镜像来加速安装</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lipanpan&gt; npm config get registry</span><br><span class="line"><span class="attr">https</span>:<span class="comment">//registry.npm.taobao.org/</span></span><br></pre></td></tr></table></figure><p>所以导致安装失败的原因看起来 好像是淘宝npm镜像没有同步更新<br>我打开了淘宝镜像的网站(<code>https://npmmirror.com/</code>) 然后发现 register 地址不知何时从 <code>https://registry.npm.taobao.org/</code> 变成了 <code>https://registry.npmmirror.com/</code> 然后我通过域名解析查询 发现这两个域名指向相同的A地址.所以应该仅仅是变了一下域名.</p><p>淘宝npm镜像的说明是 如果第一次安装失败 它会在后台自动同步 在后续安装的时候确保成功<br>我连续尝试了好几次都是安装失败  看来这个说明并不靠谱<br>然后 还有个 手动同步npm包的操作 就是手动执行  <code>$ cnpm sync xxxx</code> 但是我没安装cnpm, 着实让我感觉到蛋疼</p><p>最后我选择换回 官方的 registery地址</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lipanpan&gt; npm config set registry https:<span class="comment">//registry.npmjs.org</span></span><br><span class="line">lipanpan&gt; npm config get registry</span><br><span class="line"><span class="attr">https</span>:<span class="comment">//registry.npmjs.org/</span></span><br></pre></td></tr></table></figure><p>通过官方的reigstry 是可以看到最新版本的 netlify(8.0.4)包的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">lipanpan&gt; npm view netlify versions</span><br><span class="line">[ ...省略若干</span><br><span class="line">  <span class="string">&#x27;6.1.21&#x27;</span>,       <span class="string">&#x27;6.1.22&#x27;</span>,       <span class="string">&#x27;6.1.23&#x27;</span>,       <span class="string">&#x27;6.1.24&#x27;</span>,       <span class="string">&#x27;6.1.25&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;6.1.26&#x27;</span>,       <span class="string">&#x27;6.1.27&#x27;</span>,       <span class="string">&#x27;6.1.28&#x27;</span>,       <span class="string">&#x27;6.1.29&#x27;</span>,       <span class="string">&#x27;7.0.0&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;7.0.1&#x27;</span>,        <span class="string">&#x27;8.0.0&#x27;</span>,        <span class="string">&#x27;8.0.1&#x27;</span>,        <span class="string">&#x27;8.0.2&#x27;</span>,        <span class="string">&#x27;8.0.3&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;8.0.4&#x27;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>然后安装 netlify-cli 一次性成功</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lipanpan&gt; npm install netlify-cli -g </span><br><span class="line">...</span><br><span class="line">lipanpan&gt; netlify version</span><br><span class="line">netlify-cli/<span class="number">6.14</span><span class="number">.18</span> win32-x64 node-v16<span class="number">.13</span><span class="number">.0</span></span><br><span class="line">lipanpan&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天打算安装 netlify-cli&lt;/p&gt;
&lt;p&gt;于是打开 terminal 运行了一下&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/s</summary>
      
    
    
    
    <category term="开发问题" scheme="http://blog.lipanpanx.com/categories/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98/"/>
    
    
  </entry>
  
  <entry>
    <title>关闭vscode烦人的Github登陆弹窗</title>
    <link href="http://blog.lipanpanx.com/post/2021/202111/%E5%85%B3%E9%97%ADvscode%E7%83%A6%E4%BA%BA%E7%9A%84Github%E7%99%BB%E9%99%86%E5%BC%B9%E7%AA%97"/>
    <id>http://blog.lipanpanx.com/post/2021/202111/%E5%85%B3%E9%97%ADvscode%E7%83%A6%E4%BA%BA%E7%9A%84Github%E7%99%BB%E9%99%86%E5%BC%B9%E7%AA%97</id>
    <published>2021-11-07T08:34:08.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这两天不知道怎么了每次我打开vscode就会有烦人的github登陆弹窗弹出来,即使不登陆也不影响向github的remote仓库提交代码,但是这个弹窗真的让人好心烦</p></blockquote><span id="more"></span><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/SsO35Tp.png" alt="github登陆弹窗" loading="lazy" class="φbp"></p><p>弹窗就是上面这个样子</p><p>查了不少资料 最终我在stack overflow 上找到了一个比较有说服力的说法:</p><blockquote><p>首先当在你的电脑上安装git的时候 也会顺带的安装上git凭据管理器, 而且git允许有多个git凭据管理器,</p></blockquote><blockquote><p>然后就是git还允许多级配置分别为 local配置 global配置 system配置  这三个配置都会生效 最后形成一个 effective配置<br>因为三个配置都会生效  git 调用凭据管理器的时候 是按照顺序去寻找的 最先去 system配置当中寻找相应的凭据管理器.<br>如果你的 system配置当中凭据管理器的相关设置是<code>credential.helper=manager</code> 他就会去调用这个manager, 但是这个manager当中很可能就没有我们需要的凭据 这个时候git就会去下一级配置中去寻找其他的凭据管理器, 最后在下级的配置文件中 使用的是store管理器,最后认证通过 正常提交代码, 但是manager的调用请求已经发出了 所以manager是肯定会被弹出的</p></blockquote><blockquote><p>听起来 上面的说法头头是道, 我也确实在system配置当中找到了 <code>credential.helper=manager</code> 但是我没在local的配置当中找到<code>credential.helper=store</code> 但是我还是选择了相信,按照作者的说法 折腾了半天 就是不行 好坑爹 心好累</p></blockquote><p>最后我无意间 看到github cli的文档中有一篇 缓存凭据的文章 <a href="https://docs.github.com/en/get-started/getting-started-with-git/caching-your-github-credentials-in-git" target="_blank">Caching your GitHub credentials in Git</a></p><p>我就照着这篇文章搞了一下 虽然到最后还是失败了 但是github cli给了我一个重要的提示<br>就是我的personal token权限太低 因为我只给了personal token访问repo的权限<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/jXIwYem.png" alt="" loading="lazy"></p><p>要进行在git当中缓存github的凭据我就需要再生成一个至少包括三个权限的凭据</p><ul class="φbr" class="φbr" class="φbr"><li><input type="checkbox" disabled="" checked=""><i></i>repo</li><li><input type="checkbox" disabled="" checked=""><i></i>read:org</li><li><input type="checkbox" disabled="" checked=""><i></i>workflow</li></ul><p>最后我在github上面生成了一个新的包含这三个权限的personal token,然后在命令行中运行 <code>gh auth login</code> 按照cli的提示一步步操作, 就能够顺利的将github的凭据缓存到了git<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/KBE7juJ.png" alt="" loading="lazy"><br>然后我再打开 vscode 就不会出现烦人的弹窗了</p><p>真妙呀</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;这两天不知道怎么了每次我打开vscode就会有烦人的github登陆弹窗弹出来,即使不登陆也不影响向github的remote仓库提交代码,但是这个弹窗真的让人好心烦&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="开发问题" scheme="http://blog.lipanpanx.com/categories/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="vscode" scheme="http://blog.lipanpanx.com/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>checkboxland尝鲜</title>
    <link href="http://blog.lipanpanx.com/post/2021/202110/checkboxland%E5%B0%9D%E9%B2%9C"/>
    <id>http://blog.lipanpanx.com/post/2021/202110/checkboxland%E5%B0%9D%E9%B2%9C</id>
    <published>2021-10-30T09:59:16.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    <content type="html"><![CDATA[<p>checkboxland显示汉字的方法</p><span id="more"></span><h2 id="0x10-checkboxland">0x10 checkboxland<a title="#0x10-checkboxland" href="#0x10-checkboxland"></a></h2><p>前两天 在 github trending 上看到一个开源项目<br><code>checkboxland</code> 这个项目是用 checkbox 去组成像素点可以在网页上表达图像的这么个工具 github地址:<br><a href="https://github.com/bryanbraun/checkboxland">https://github.com/bryanbraun/checkboxland</a></p><p>我感觉这个小东西 真的挺有意思<br>用checkbox 不仅仅可以放图片 放动画 玩贪吃蛇<br>甚至可以在网页上面用checkbox播放电影(就很离谱)</p><p>所以我就抽空玩了一下 本来 想想用这个写一句话放在站点上 做滚动广告牌 类似于这样:<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/DBxt540.gif" alt="" loading="lazy"></p><p>但是一个很明显的事情 就是这个项目是一个比较新的项目,支持中文是不可能支持中文的, 但是我实在是手痒, 最后想想决定自己去做几个汉字的小字库</p><p>由于我想要显示的内容是 <code>李攀攀全宇宙最帅</code> 所以我打算先做我的名字</p><h2 id="0x20-汉字取模">0x20 汉字取模<a title="#0x20-汉字取模" href="#0x20-汉字取模"></a></h2><p>做这种点阵的汉字字模 我还是有点经验的的<br>首先 我找到了一个在线的取模工具 <a href="https://www.23bei.com/tool-216.html" target="_blank">我是取模工具</a><br>这个工具可以说是非常棒了, 把你需要取模的 汉字输进去 他会返回一串 16进制的数字串.</p><p>比如我的姓氏 <code>李</code>, 我选择的字体是16x16的宋体, 我按照 从左到右从上到下 横向8点左高位的方式取模<br>最后得到的字符串是:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x08</span>,<span class="number">0x7F</span>,<span class="number">0xFC</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x05</span>,<span class="number">0x40</span>,<span class="number">0x09</span>,<span class="number">0x30</span>,<span class="number">0x31</span>,<span class="number">0x0E</span>,<span class="number">0xC1</span>,<span class="number">0x04</span>,</span><br><span class="line"><span class="number">0x0F</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x01</span>,<span class="number">0x88</span>,<span class="number">0x7F</span>,<span class="number">0xFC</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x05</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x00</span></span><br></pre></td></tr></table></figure><p>然后再通过js 把这些16进制的数字串中的每一个数字转换成为 8位的二进制字符就行了</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">binary</span>(<span class="params">num, Bits</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> resArry = [];</span><br><span class="line">  <span class="keyword">var</span> xresArry = [];</span><br><span class="line">  i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (; num &gt; <span class="number">0</span>;) &#123;</span><br><span class="line">    resArry.push(num % <span class="number">2</span>);</span><br><span class="line">    num = <span class="built_in">parseInt</span>(num / <span class="number">2</span>);</span><br><span class="line">    i++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">    xresArry.push(resArry[j]);</span><br><span class="line">  <span class="keyword">if</span> (Bits &lt; xresArry.length) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;位数小于二进制位数&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (Bits) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> r = xresArry.length; r &lt; Bits; r++) &#123;</span><br><span class="line">      xresArry.unshift(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> xresArry.join().replace(<span class="regexp">/,/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每2个8位为一组拼接成为 16x16 的二进制矩阵, 然后就能在 checkboxland 里面进行显示了<br>比如 <code>李</code> 和 <code>攀</code> 的矩阵就是:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br></pre></td></tr></table></figure><h2 id="0x30-checkbox显示汉字">0x30 checkbox显示汉字<a title="#0x30-checkbox显示汉字" href="#0x30-checkbox显示汉字"></a></h2><p>最后我决定先把我的名字搞上去 直接把这个二进制的矩阵传给 checkboxland的实例就能显示出来了<br>显示效果是这样的:<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/5PJmwGV.png" alt="" loading="lazy"></p><p>不过还有个蛋疼的问题 就是 作者说checkbox的数量最好不要超过1500个 不然就会遇到性能问题<br>这…<br>我显示这三个汉字 就用掉了八百多个checkbox<br>这玩意的最终的使用场景可能也就是显示字了, 汉字这个东西实在比较耗费盒子😂<br>但是我感觉 网友还是能玩出花来的 这东西有意思</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;checkboxland显示汉字的方法&lt;/p&gt;</summary>
    
    
    
    <category term="其他" scheme="http://blog.lipanpanx.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>utools插件重载问题</title>
    <link href="http://blog.lipanpanx.com/post/2021/202110/utools%E6%8F%92%E4%BB%B6%E9%87%8D%E8%BD%BD"/>
    <id>http://blog.lipanpanx.com/post/2021/202110/utools%E6%8F%92%E4%BB%B6%E9%87%8D%E8%BD%BD</id>
    <published>2021-10-27T07:47:05.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    <content type="html"><![CDATA[<p>utools插件开发 中 plugin.json 中的配置无法生效问题</p><span id="more"></span><h2 id="0x10-需求">0x10 需求<a title="#0x10-需求" href="#0x10-需求"></a></h2><p>最近两天打算找个不限制流量, 不限制容量的 图床, 之前 我一直用阿里云的OSS, 太鸡儿贵了<br>因为我看到国外的不少图床 都是免费的 并且不限制容量不限流量, 我太心动了</p><p>所以我打算把我国内的图床 换成国外的图床 然后在国内访问</p><p>想法有了之后 我就开始动手折腾了,把所有的图片上传到国外的图床, 然后通过代理服务器访问就好了</p><p>这就需要转链, 把原本图片的链接 转换成为 通过代理服务器访问的链接,所以我就需要搞个 utools工具  来帮助我方便的转链</p><h2 id="0x20-开搞">0x20 开搞<a title="#0x20-开搞" href="#0x20-开搞"></a></h2><p>这么久没有玩 utools也从1.x 升级到 2.x 了<br>不过插件的开发方式还是大同小异</p><p>开发过程挺顺利 不过中途遇到了几个坑, 我再这里记录一下</p><h3 id="0x21-utools加载插件的方式变了">0x21 utools加载插件的方式变了<a title="#0x21-utools加载插件的方式变了" href="#0x21-utools加载插件的方式变了"></a></h3><p>utools 1.x 可以直接加载插件 但是2.x 明显行不通</p><p>2.x 如果你想要加载插件 你就需要首先下载一个 <code>开发者工具</code> 插件 这是一个开发utools插件的 插件, 如下图:<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/Ns7NmHj.png" alt="space" loading="lazy"></p><h3 id="0x22-utools插件重载">0x22 utools插件重载<a title="#0x22-utools插件重载" href="#0x22-utools插件重载"></a></h3><p>本次插件开发当中遇到的一个最为蛋疼的问题就是插件重载的问题</p><p>utools 识别不同插件是通过 一个plugin.json的文件<br>这个文件里面可以定义  在什么时候什么条件下去唤醒 utools<br>我在里面写了个通过正则表达式去匹配链接的方式去唤醒我的插件</p><p>也就是说当我把国外的图床上图片的链接粘贴到utools的时候,utools会用我写好的正则表达式去尝试匹配这个链接,如果匹配成功  则utools 会调用我的插件 对 这个链接进行转链</p><p>但是中途发现一个问题 就是链接 怎么都无法匹配成功<br>我一度怀疑是我的正则表达式有问题导致无法成功匹配<br>最后调试来调试去 发现 我无论怎么改正则表达式 就是无法匹配, 我才开始怀疑utools</p><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/ZKgSjT9.png" alt="space" loading="lazy" class="φbp"></p><p>我已经 <code>图中①</code> 处的开关打开了<br>按理说每次我插件UI进入隐藏状态之后 插件就会完全退出 等我再次进入插件 插件的代码都会重载<br>本来我以为所有的插件代码都会自动重载</p><p>但是 其实 实际情况并不是我想想的那样 如果你改动的是插件的逻辑代码 当你打开 <code>图中①</code>处的开关时候,插件确实会重载 但是如果你改动的是plugin.json 当中的内容, plugin.json 是不会被自动重载的, utools开发工具的自动重载 仅仅重载你插件的逻辑代码 不会重载你的 plugin.json文件, 这个文件 属于你的插件的配置文件</p><p>好鸡儿蛋疼, 每次更改plugin.json 都需要 手动去重载 这个文件, 就是手动去按<code>图中②</code> 处的更新按钮</p><h3 id="0x23-js正则表达式的坑">0x23 js正则表达式的坑<a title="#0x23-js正则表达式的坑" href="#0x23-js正则表达式的坑"></a></h3><p>还有个比较坑的问题就是js的 正则表达式的坑:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;text string&quot;</span>.match(<span class="regexp">/exp/</span>flags)</span><br></pre></td></tr></table></figure><p>我们使用 正则表达式的时候 一般会使用 不同的flag<br>js 的正则表达式 也有各种flag  有  <code>g  i m u y s</code> 等各种flag<br>但是在使用 match 函数的 时候 如果你的正则表达式使用的flag中有 <code>g</code> 这个flag<br>则match 函数返回的匹配数据当中 不包含正则表达式匹配到的group数据</p><p>mdn 中的原文是这样的:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">If the g flag is used, all results matching the complete regular expression will be returned, but capturing groups will not.</span><br><span class="line">if the g flag is not used, only the first complete match and its related capturing groups are returned. In this case, the returned item will have additional properties as described below.</span><br></pre></td></tr></table></figure><p>一旦你的正则表达式使用了这个g flag,<br>则match 函数返回的就不是详细的匹配数据,而仅仅是一个匹配结果,这样的话不是很方便做细致的调试</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;utools插件开发 中 plugin.json 中的配置无法生效问题&lt;/p&gt;</summary>
    
    
    
    <category term="开发问题" scheme="http://blog.lipanpanx.com/categories/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="utools" scheme="http://blog.lipanpanx.com/tags/utools/"/>
    
  </entry>
  
  <entry>
    <title>Hyper-V安装lede软路由</title>
    <link href="http://blog.lipanpanx.com/post/2021/202107/Hyper-V%E5%AE%89%E8%A3%85lede%E8%BD%AF%E8%B7%AF%E7%94%B1"/>
    <id>http://blog.lipanpanx.com/post/2021/202107/Hyper-V%E5%AE%89%E8%A3%85lede%E8%BD%AF%E8%B7%AF%E7%94%B1</id>
    <published>2021-07-31T11:40:02.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    <content type="html"><![CDATA[<h2 id="首先下载固件">首先下载固件<a title="#首先下载固件" href="#首先下载固件"></a></h2><p>固件可以去L大lede仓库的 github actions 页面下载.<br><a href="https://github.com/coolsnowwolf/lede/actions" target="_blank">OpenWrt_firmware</a></p><p>固件下载下来之后我们打开压缩包可以看到 压缩包内有许多的文件:</p><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/G6NTz7i.png" alt="" loading="lazy" class="φbp"></p><p>这里我们可以把img文件转换成为vhdx格式的硬盘映像文件,然后把映像文件挂在到hyper-v虚拟机 来实现 lede的安装.</p><p>我们需要转换的文件就是: openwrt-x86-64-generic-squashfs-combined-efi.img. 因为是安装在x86平台 且efi文件系统能够与hyper-v 2代虚拟机适配.</p><h2 id="然后用转换工具将-img文件转换成vhdx文件">然后用转换工具将 img文件转换成vhdx文件<a title="#然后用转换工具将-img文件转换成vhdx文件" href="#然后用转换工具将-img文件转换成vhdx文件"></a></h2><p>镜像转换可以去网上下载 StarWind V2V Image Converter转换工具安装到电脑上,然后执行下面的操作就行了.</p><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/XxpgZfq.png" alt="选择镜像" loading="lazy" class="φbp"></p><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/7ygEiua.png" alt="选择镜像" loading="lazy" class="φbp"></p><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/61YbSjZ.png" alt="选择生成文件的存在形式" loading="lazy" class="φbp"></p><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/QqICe57.png" alt="选择生成文件的格式" loading="lazy" class="φbp"></p><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/yqGwfZ2.png" alt="选择生成文件的格式" loading="lazy" class="φbp"></p><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/bsqnN0o.png" alt="选择生成文件的保存地址" loading="lazy" class="φbp"></p><p>点击转换就能在我们指定的目录当中 生成我们所需要的 vhdx文件了</p><h2 id="然后创建虚拟机">然后创建虚拟机<a title="#然后创建虚拟机" href="#然后创建虚拟机"></a></h2><p>使用刚才生成的 vhdx文件创建虚拟机,需要注意下面几点:<br>1, 选择hyper-v的 第二代虚拟机<br>2, 配置网络的时候选择 一个 和宿主机共享网口的 外部网络虚拟交换机(方便从宿主机登录lede后台)<br>3, 虚拟硬盘选择我们刚才生成的vhdx文件<br>4, 关闭 虚拟机的 安全启动选项</p><p>然后就能成功创建好一个lede虚拟机了</p><blockquote><p>这里有个需要注意的的点就是 虚拟机安装完成之后不会自动进入bash,需要你手动在字符界面按enter 才会进入bash(着实有点蛋疼,不知道的还以为安装失败了)</p></blockquote><p>虚拟机创建完成之后 默认的ip地址是: 192.168.1.1 有时候这个地址不是我们所需要的, 我们可以在虚拟机当中执行下面的命令来完成网络地址的更改.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim  /etc/config/network <span class="comment"># 把虚拟机默认网口的ip地址更改为 和宿主机同一网段的合法地址</span></span><br><span class="line">cat network <span class="comment"># 查看更改是否成功</span></span><br><span class="line">service network restart <span class="comment"># 重启网络服务</span></span><br><span class="line">ifconfig <span class="comment"># 查看网口地址是否更改</span></span><br><span class="line">ping 192.168.31.1 <span class="comment"># 查看是否能够ping通网关</span></span><br></pre></td></tr></table></figure><p>搞定上述操作之后就能在宿主机打开lede的登录界面了,默认密码是password.</p><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/oHMfCpu.png" alt="" loading="lazy" class="φbp"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;首先下载固件&quot;&gt;首先下载固件&lt;a title=&quot;#首先下载固件&quot; href=&quot;#首先下载固件&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;固件可以去L大lede仓库的 github actions 页面下载.&lt;br&gt;
&lt;a href=&quot;https://github.com/coo</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>GithubActions编译lede固件</title>
    <link href="http://blog.lipanpanx.com/post/2021/202107/GithubActions%E7%BC%96%E8%AF%91lede%E5%9B%BA%E4%BB%B6"/>
    <id>http://blog.lipanpanx.com/post/2021/202107/GithubActions%E7%BC%96%E8%AF%91lede%E5%9B%BA%E4%BB%B6</id>
    <published>2021-07-31T10:11:17.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    <content type="html"><![CDATA[<p>这两天开源界不太平为了防止L大删库跑路,我决定把它的仓库fork到我自己的github账号下面用github actions自己编译固件.</p><h2 id="fork-lede-仓库">fork lede 仓库<a title="#fork-lede-仓库" href="#fork-lede-仓库"></a></h2><p><a href="https://github.com/coolsnowwolf/lede" target="_blank">lede github仓库地址</a><br>进入L大的仓库 直接点击fork即可<br><a href="https://github.com/lipanpan-hub/lede" target="_blank">我fork的仓库</a></p><h2 id="创建自己的分支-并允许-github-actions">创建自己的分支 并允许 github actions<a title="#创建自己的分支-并允许-github-actions" href="#创建自己的分支-并允许-github-actions"></a></h2><p>仓库创建完成之后 可以在github dev 提供的在线编辑器当中快速的创建一个自己的分支(我新建了一个lpp_lede分支), 我们在自己的分支中处理自己的操作, 这样不会影响主分支, 当L大的仓库发生变化的时候 我们的主分支依然可以快速merge L大的提交.</p><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/HxCnrIQ.png" alt="" loading="lazy" class="φbp"></p><p>还有就是fork的仓库是默认不支持 github actions的, 需要我们手动enable. 打开自己fork过来的仓库的actions选项卡 点击<code>i understand my workflows,go ahead and enable them</code>就行了.</p><h2 id="更改自己分支的-ci文件,-开始编译">更改自己分支的 ci文件, 开始编译<a title="#更改自己分支的-ci文件,-开始编译" href="#更改自己分支的-ci文件,-开始编译"></a></h2><p>github actions的ci文件就是 <code>.github/workflows/</code> 目录下的yml文件, lede源仓库中 此目录下存在一个 <code>opnewrt-ci.yml</code> 的文件, 这个文件定义了 github actions的所有行为,我们打开这个文件 可以看到作者规定了2中触发github actions执行编译的条件 一个是定时编译, 一个是由 release事件触发的编译. 这两种编译我都不需要我要的是手动编译. 所以我可以在我的分支上改为由push事件触发编译.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">on:</span><br><span class="line">  schedule:</span><br><span class="line">    - cron: 0 20 * * *</span><br><span class="line">  release:</span><br><span class="line">    types: [published]</span><br><span class="line"><span class="comment"># 上面这两种方式不需要 改为下面这样</span></span><br><span class="line">on:</span><br><span class="line">  push:</span><br><span class="line">    branches: [ lpp_lede ]</span><br></pre></td></tr></table></figure><p>这里切记 一切的更改都是发生在 自己的新分支上的 而不是项目的master分支上面的</p><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/LPuaQ7r.png" alt="" loading="lazy" class="φbp"></p><p>当我们在自己的分支上面提交更改完成的 <code>openwrt-ci.yml</code> 文件之后就能看到项目的主页会提示 lpp_lede分支发生了更改, 而且 github actions的编译行为也在 lpp_lede分支成功触发.</p><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/xd6qVry.png" alt="" loading="lazy" class="φbp"></p><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/9PfkiMk.png" alt="" loading="lazy" class="φbp"></p><p>然后我们坐等丰收的果实就行了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这两天开源界不太平为了防止L大删库跑路,我决定把它的仓库fork到我自己的github账号下面用github actions自己编译固件.&lt;/p&gt;
&lt;h2 id=&quot;fork-lede-仓库&quot;&gt;fork lede 仓库&lt;a title=&quot;#fork-lede-仓库&quot; href</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hyper-V虚拟交换机</title>
    <link href="http://blog.lipanpanx.com/post/2021/202107/Hyper-V%E8%99%9A%E6%8B%9F%E4%BA%A4%E6%8D%A2%E6%9C%BA"/>
    <id>http://blog.lipanpanx.com/post/2021/202107/Hyper-V%E8%99%9A%E6%8B%9F%E4%BA%A4%E6%8D%A2%E6%9C%BA</id>
    <published>2021-07-30T12:39:03.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    <content type="html"><![CDATA[<p>hyper-v 管理器当中除了当我们新建一个虚拟机,默认情况下这个虚拟机会连接到hyper-v自带的 default switch 交换机.</p><p>除了 default switch这个虚拟交换机之外, hyper-v 管理器当中还可以手动创建多种形式的虚拟交换机.分别是:<br>1, 允许共享网络适配器的外部网络虚拟交换机<br>2, 不允许共享网络适配器的外部网络虚拟交换机<br>3, 内部网络虚拟交换机<br>4, 专用网络虚拟交换机</p><!-- ![](https://search.pstatic.net/common/?src=https://i.imgur.com/oCyYI83.png)![](https://search.pstatic.net/common/?src=https://i.imgur.com/64JDaYQ.png)![](https://search.pstatic.net/common/?src=https://i.imgur.com/Wcvj77w.png)![](https://search.pstatic.net/common/?src=https://i.imgur.com/iBYu3PN.png) --><p>今天我就来讲下这几种不同虚拟交换机的特点:</p><details><summary>允许/不允许 共享网络适配器的外部网络虚拟交换机</summary><p>首先就是 外部网络虚拟交换机是允许访问互联网的,因此需要和网口进行绑定,在绑定网口的 时候有个非常重要的选项就是 <code>是否允许管理操作系统共享此网络适配器</code> 如果勾选这个选项则 连接此虚拟交换机的虚拟机可以和宿主机共享网口, 二者可以通过同一个网口连接网络. 如果没有勾选此选项则和虚拟交换机绑定的网口仅仅为虚拟机服务, 无法再为宿主机服务.</p></details><details><summary>内部网络虚拟交换机</summary><p>内部虚拟网络交换机 是不允许访问互联网的, 连接到此交换机上的虚拟机是可以和宿主机通讯的</p></details><details><summary>专用网络虚拟交换机</summary><p>专用网络虚拟交换机是 是没有连接到互联网的 连接到此虚拟交换机上的虚拟机是可以相互通信的 但是他们都不能与宿主机进行通信</p></details>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;hyper-v 管理器当中除了当我们新建一个虚拟机,默认情况下这个虚拟机会连接到hyper-v自带的 default switch 交换机.&lt;/p&gt;
&lt;p&gt;除了 default switch这个虚拟交换机之外, hyper-v 管理器当中还可以手动创建多种形式的虚拟交换机.</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hyper-V下的linux虚拟机访问宿主机文件</title>
    <link href="http://blog.lipanpanx.com/post/2021/202107/Hyper-V%E4%B8%8B%E7%9A%84linux%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%AE%BF%E9%97%AE%E5%AE%BF%E4%B8%BB%E6%9C%BA%E6%96%87%E4%BB%B6"/>
    <id>http://blog.lipanpanx.com/post/2021/202107/Hyper-V%E4%B8%8B%E7%9A%84linux%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%AE%BF%E9%97%AE%E5%AE%BF%E4%B8%BB%E6%9C%BA%E6%96%87%E4%BB%B6</id>
    <published>2021-07-30T12:36:40.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Hyper-V下的Ubuntu虚拟机开启增强会话</title>
    <link href="http://blog.lipanpanx.com/post/2021/202107/Hyper-V%E4%B8%8B%E7%9A%84Ubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%BC%80%E5%90%AF%E5%A2%9E%E5%BC%BA%E4%BC%9A%E8%AF%9D"/>
    <id>http://blog.lipanpanx.com/post/2021/202107/Hyper-V%E4%B8%8B%E7%9A%84Ubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%BC%80%E5%90%AF%E5%A2%9E%E5%BC%BA%E4%BC%9A%E8%AF%9D</id>
    <published>2021-07-30T12:35:53.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Hyerp-V虚拟机安装教程(ubuntu)</title>
    <link href="http://blog.lipanpanx.com/post/2021/202107/Hyerp-V%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B-ubuntu"/>
    <id>http://blog.lipanpanx.com/post/2021/202107/Hyerp-V%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B-ubuntu</id>
    <published>2021-07-30T05:16:22.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为虚拟机选择系统">为虚拟机选择系统<a title="#为虚拟机选择系统" href="#为虚拟机选择系统"></a></h2><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/hMwtYIv.png" alt="" loading="lazy" class="φbp"></p><p>从这张ubuntu releases cycle 图可以看出 LTS版本的声明周期相对其他版本要长的多,所以我们选择LTS版本作为我们的虚拟机系统的版本,比如: <code>Ubuntu 20.04.3 LTS (Focal Fossa)</code> 但是这个LTS版本依然有2个比较方便的可选项(还有其他选项):一个是带图形界面的 desktop版本 一个是不带图形界面的 server版本. 为了方便操作我们选择带图形界面的 desktop版本.</p><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/q2BqFXM.png" alt="" loading="lazy" class="φbp"></p><h2 id="hyper-v管理器当中新建虚拟机">Hyper-V管理器当中新建虚拟机<a title="#hyper-v管理器当中新建虚拟机" href="#hyper-v管理器当中新建虚拟机"></a></h2><h2 id="虚拟机系统安装步骤">虚拟机系统安装步骤<a title="#虚拟机系统安装步骤" href="#虚拟机系统安装步骤"></a></h2><p><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/BVqkU9A.png" alt="" loading="lazy"><br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/PScjfW1.png" alt="" loading="lazy"><br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/aQm4XhX.png" alt="" loading="lazy"><br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/N7uci6V.png" alt="" loading="lazy"><br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/bWncF3h.png" alt="" loading="lazy"><br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/8UVwnA9.png" alt="" loading="lazy"></p><p>只需要等待一会就能安装完成了,然后重启一下就行了.<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/FDIyzpN.png" alt="" loading="lazy"></p><p>重启完成之后会有一个系统设置引导界面,走完引导界面之后就能正式进入系统了<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/fxMjST7.png" alt="" loading="lazy"></p><p>同时虚拟机创建完成之后我们的电脑上存放虚拟机的文件夹当中会多处3个子文件夹,分别用来存放 虚拟机描述文件,虚拟硬盘文件,虚拟机快照文件.<br><img src="https://search.pstatic.net/common/?src=https://i.imgur.com/GnkPPOg.png" alt="" loading="lazy"></p><h2 id="更改apt源-更新系统">更改APT源 更新系统<a title="#更改apt源-更新系统" href="#更改apt源-更新系统"></a></h2><p>如果在系统安装的时候 时区设置成了shanghai 就不用更改软件安装源,ubuntu会自动选择中国的软件安装源,只需要在系统提示更新的时候手动点击按钮更新即可.</p><h2 id="ubuntu系统科学上网">ubuntu系统科学上网<a title="#ubuntu系统科学上网" href="#ubuntu系统科学上网"></a></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;为虚拟机选择系统&quot;&gt;为虚拟机选择系统&lt;a title=&quot;#为虚拟机选择系统&quot; href=&quot;#为虚拟机选择系统&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://search.pstatic.net/common/?src=https://i.imgu</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>利用task调试VSCode配置文件当中的变量</title>
    <link href="http://blog.lipanpanx.com/post/2021/202106/%E5%88%A9%E7%94%A8task%E8%B0%83%E8%AF%95VSCode%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%BD%93%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F__"/>
    <id>http://blog.lipanpanx.com/post/2021/202106/%E5%88%A9%E7%94%A8task%E8%B0%83%E8%AF%95VSCode%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%BD%93%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F__</id>
    <published>2021-06-20T16:57:58.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;tasks&quot;</span>: &#123;</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;2.0.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tasks&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;测试命令的名字&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;shell&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;echo&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;args&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span>, <span class="comment">//其实就是 workspace文件 foler字段的第一个值</span></span><br><span class="line">        <span class="string">&quot;$&#123;workspaceFolderBasename&#125;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;&#x27;$&#123;file&#125;&#x27;&quot;</span>, <span class="comment">// 当前文件的绝对路径</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// &quot;&#x27;$&#123;fileWorkspaceFolder&#125;&#x27;&quot;, //当前文件的 workspace foler</span></span><br><span class="line">        <span class="comment">// &quot;$&#123;relativeFile&#125;&quot;, // 当前文件的相对路径  相对于 $&#123;wrokspaceFolder&#125;的路径</span></span><br><span class="line">        <span class="comment">// &quot;$&#123;relativeFileDirname&#125;&quot;,</span></span><br><span class="line">        <span class="comment">// &quot;$&#123;fileBasename&#125;&quot;, //当前文件的 文件名字</span></span><br><span class="line">        <span class="comment">// &quot;$&#123;fileBasenameNoExtension&#125;&quot;,</span></span><br><span class="line">        <span class="comment">// &quot;$&#123;fileDirname&#125;&quot;, //当前文件所在的文件夹的名字</span></span><br><span class="line">        <span class="comment">// &quot;$&#123;fileExtname&#125;&quot;,</span></span><br><span class="line">        <span class="comment">// &quot;$&#123;cwd&#125;&quot;,  // task runner 的当前工作目录 也就是 $&#123;workspaceFoler&#125;</span></span><br><span class="line">        <span class="string">&quot;$&#123;lineNumber&#125;&quot;</span>,</span><br><span class="line">        <span class="comment">// &quot;$&#123;selectedText&#125;&quot;, //被光标选中的内容</span></span><br><span class="line">        <span class="comment">// &quot;$&#123;execPath&#125;&quot;,  //code.exe的 绝对路径</span></span><br><span class="line">        <span class="string">&quot;$&#123;defaultBuildTask&#125;&quot;</span>, <span class="comment">// 默认 build task的名字, 如果没有设置相应的值 task不会报错 但是task会拒绝执行</span></span><br><span class="line">        <span class="string">&quot;$&#123;pathSeparator&#125;&quot;</span>,</span><br><span class="line"></span><br><span class="line">        <span class="comment">////////////////////////////////</span></span><br><span class="line">        <span class="string">&quot;$&#123;workspaceFolder:5675_node_child_process_module&#125;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;$&#123;env:USERNAME&#125;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;$&#123;config:editor.fontSize&#125;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;$&#123;&#125;&quot;</span></span><br><span class="line">      ],</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>VSCode的task系统</title>
    <link href="http://blog.lipanpanx.com/post/2021/202106/VSCode%E7%9A%84task%E7%B3%BB%E7%BB%9F__"/>
    <id>http://blog.lipanpanx.com/post/2021/202106/VSCode%E7%9A%84task%E7%B3%BB%E7%BB%9F__</id>
    <published>2021-06-20T16:02:37.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    <content type="html"><![CDATA[<p>vscode 的 task 系统可以让我们非常方便的调用外部的工具 可以说是非常强大了, 下面是常用的 task 相关的 vscode 指令:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Tasks: Run Task <span class="comment">// 执行某个task(手动选择)</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Tasks</span>: Run Build Task <span class="comment">// 快捷执行 build task(需要事先配置好build task)</span></span><br><span class="line"><span class="attr">Tasks</span>: Run Test Task <span class="comment">// 快捷执行 test task(需要视线配置好test task)</span></span><br><span class="line"><span class="attr">Tasks</span>: Rerun Last Tas <span class="comment">// 快捷执行上次刚执行过的task</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Tasks</span>: Configure Task <span class="comment">// 对已经存在的task进行配置</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Tasks</span>: Open User Tasks <span class="comment">//打开 user目录下的 tasks.json</span></span><br><span class="line"><span class="attr">Tasks</span>: Configure Default Test Task  <span class="comment">// 手动配置 test task</span></span><br><span class="line"><span class="attr">Tasks</span>: Configure Default Build Task <span class="comment">// 手动配置 build task</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Tasks</span>: Manage Automatic Tasks <span class="keyword">in</span> Folder  <span class="comment">// 允许/禁止 automatic task</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Tasks</span>: Restart Running Task <span class="comment">// 重新运行正在执行task</span></span><br><span class="line"><span class="attr">Tasks</span>: Show Running Tasks <span class="comment">// 展示正在执行的task</span></span><br><span class="line"><span class="attr">Tasks</span>: Terminate Task <span class="comment">// 终止 task</span></span><br><span class="line"><span class="attr">Tasks</span>: Show Task Log <span class="comment">// 显式 task 日志</span></span><br></pre></td></tr></table></figure><p>如果我们想要 使用 vscode 的 task 系统需要创建相应的 tasks.json 文件 在用户的 user 目录当中可以允许存在一个 tasks.json 文件这个文件中存放的 task 被称为用户 task, 同时在我们的 worksapce 当中也允许存在 tasks.json 文件这个文件当中的 task 可以被称为工作空间 task, 二者有一定区别但是区别很小, 学会使用 workspace task 则 user task 无师自通. 下面我主要讲解 workspace task.</p><p>一般情况下 在我们的 worksapce 当中并不存在 tasks.json 这个文件,我们可以通过 vscode 提供的命令 <code>Tasks: Configure Task</code> 来随便配置一个 task,这样依赖 vscode 会为我们在 workspace 的.vscode 目录下面自动创建一个 tasks.json 文件,当然我们也可以自己手动在 workspace 的 .vscode 目录当中手动创建一个 tasks.json 文件. 文件创建完成之后按照下面的格式再创建 task 就行了:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;2.0.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tasks&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;npm&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;script&quot;</span>: <span class="string">&quot;install&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;problemMatcher&quot;</span>: [],</span><br><span class="line">      <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;npm: install&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;detail&quot;</span>: <span class="string">&quot;install dependencies from package&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// 其他的 task</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如上我们看到 tasks 列表当中可以有多个 task,每个 task 都用大括号包裹起来,每个大括号当中都是一个单独的 task,括号当中同时包含了这个 task 所有配置项.</p><p>task 的配置项多如牛毛,今天我就简单讲讲:</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;vscode 的 task 系统可以让我们非常方便的调用外部的工具 可以说是非常强大了, 下面是常用的 task 相关的 vscode 指令:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>VSCode中使用ESLint作为Vue文件的代码格式化工具</title>
    <link href="http://blog.lipanpanx.com/post/2021/202106/VSCode%E4%B8%AD%E4%BD%BF%E7%94%A8ESLint%E4%BD%9C%E4%B8%BA%E4%BB%A3%E7%A0%81%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%B7%A5%E5%85%B7"/>
    <id>http://blog.lipanpanx.com/post/2021/202106/VSCode%E4%B8%AD%E4%BD%BF%E7%94%A8ESLint%E4%BD%9C%E4%B8%BA%E4%BB%A3%E7%A0%81%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%B7%A5%E5%85%B7</id>
    <published>2021-06-15T12:20:29.000Z</published>
    <updated>2022-04-11T03:41:31.974Z</updated>
    
    <content type="html"><![CDATA[<p>很多前端项目都会使用eslint 去检查我们写的代码是否符合规范,但是这年头大家都很懒, 一般都会使用自动的代码格式化工具让自己的代码服务eslint的规范, 但我们使用自动的代码格式话工具免不了要配置, 针对不同的eslint配置要么是使用不同的formatter, 要么是使用同一formatter但是需要使用不同的配置去指定formatter的不同行为,说实话有点麻烦. 其实eslint 自己的 autofix 也很不错了, 可以再保存代码的时候让eslint自动执行autofix.</p><p>下面我讲下 如何使用vscode中的 vscode-eslint插件在保存vue文件的时候自动格式化代码:</p><p>其实非常简单,只需要在vscode的settings.json文件当中添加 如下几行就行了:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;[vue]&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;dbaeumer.vscode-eslint&quot;</span>,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;editor.codeActionsOnSave&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;source.fixAll.eslint&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然这里也可以使用下面的配置,但是使用下面配置,如果你的项目当中还使用其他的formatter,需要先把其他的formatter 给disable掉,就比较霸道,不建议使用:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;eslint.format.enable&quot;</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">&quot;editor.codeActionsOnSave&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;source.fixAll.eslint&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里还有个需要注意的点就是,我们使用eslint作为格式化工具的时候,不能和 “editor.formatOnSave” 选项一起使用实现保存时自动格式化,只能和&quot;editor.codeActionsOnSave&quot;选项一起使用 才能实现保存的时候自动格式化.</p><p><a href="https://github.com/microsoft/vscode-eslint" target="_blank">参考文档</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;很多前端项目都会使用eslint 去检查我们写的代码是否符合规范,但是这年头大家都很懒, 一般都会使用自动的代码格式化工具让自己的代码服务eslint的规范, 但我们使用自动的代码格式话工具免不了要配置, 针对不同的eslint配置要么是使用不同的formatter, 要么</summary>
      
    
    
    
    
    <category term="vscode" scheme="http://blog.lipanpanx.com/tags/vscode/"/>
    
  </entry>
  
</feed>
