{"title":"VSCode的task系统","date":"2021-06-20T16:02:37.000Z","date_formatted":{"ll":"2021年6月20日","L":"2021/06/20","MM-DD":"06-20"},"link":"post/2021/202106/VSCode的task系统__","updated":"2022-01-31T23:33:48.646Z","content":"<p>vscode 的 task 系统可以让我们非常方便的调用外部的工具 可以说是非常强大了, 下面是常用的 task 相关的 vscode 指令:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Tasks: Run Task <span class=\"comment\">// 执行某个task(手动选择)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">Tasks</span>: Run Build Task <span class=\"comment\">// 快捷执行 build task(需要事先配置好build task)</span></span><br><span class=\"line\"><span class=\"attr\">Tasks</span>: Run Test Task <span class=\"comment\">// 快捷执行 test task(需要视线配置好test task)</span></span><br><span class=\"line\"><span class=\"attr\">Tasks</span>: Rerun Last Tas <span class=\"comment\">// 快捷执行上次刚执行过的task</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">Tasks</span>: Configure Task <span class=\"comment\">// 对已经存在的task进行配置</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">Tasks</span>: Open User Tasks <span class=\"comment\">//打开 user目录下的 tasks.json</span></span><br><span class=\"line\"><span class=\"attr\">Tasks</span>: Configure Default Test Task  <span class=\"comment\">// 手动配置 test task</span></span><br><span class=\"line\"><span class=\"attr\">Tasks</span>: Configure Default Build Task <span class=\"comment\">// 手动配置 build task</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">Tasks</span>: Manage Automatic Tasks <span class=\"keyword\">in</span> Folder  <span class=\"comment\">// 允许/禁止 automatic task</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">Tasks</span>: Restart Running Task <span class=\"comment\">// 重新运行正在执行task</span></span><br><span class=\"line\"><span class=\"attr\">Tasks</span>: Show Running Tasks <span class=\"comment\">// 展示正在执行的task</span></span><br><span class=\"line\"><span class=\"attr\">Tasks</span>: Terminate Task <span class=\"comment\">// 终止 task</span></span><br><span class=\"line\"><span class=\"attr\">Tasks</span>: Show Task Log <span class=\"comment\">// 显式 task 日志</span></span><br></pre></td></tr></table></figure>\n<p>如果我们想要 使用 vscode 的 task 系统需要创建相应的 tasks.json 文件 在用户的 user 目录当中可以允许存在一个 tasks.json 文件这个文件中存放的 task 被称为用户 task, 同时在我们的 worksapce 当中也允许存在 tasks.json 文件这个文件当中的 task 可以被称为工作空间 task, 二者有一定区别但是区别很小, 学会使用 workspace task 则 user task 无师自通. 下面我主要讲解 workspace task.</p>\n<p>一般情况下 在我们的 worksapce 当中并不存在 tasks.json 这个文件,我们可以通过 vscode 提供的命令 <code>Tasks: Configure Task</code> 来随便配置一个 task,这样依赖 vscode 会为我们在 workspace 的.vscode 目录下面自动创建一个 tasks.json 文件,当然我们也可以自己手动在 workspace 的 .vscode 目录当中手动创建一个 tasks.json 文件. 文件创建完成之后按照下面的格式再创建 task 就行了:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;version&quot;</span>: <span class=\"string\">&quot;2.0.0&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;tasks&quot;</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;npm&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;script&quot;</span>: <span class=\"string\">&quot;install&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;problemMatcher&quot;</span>: [],</span><br><span class=\"line\">      <span class=\"attr\">&quot;label&quot;</span>: <span class=\"string\">&quot;npm: install&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">&quot;detail&quot;</span>: <span class=\"string\">&quot;install dependencies from package&quot;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 其他的 task</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如上我们看到 tasks 列表当中可以有多个 task,每个 task 都用大括号包裹起来,每个大括号当中都是一个单独的 task,括号当中同时包含了这个 task 所有配置项.</p>\n<p>task 的配置项多如牛毛,今天我就简单讲讲:</p>\n","prev":{"title":"利用task调试VSCode配置文件当中的变量","link":"post/2021/202106/利用task调试VSCode配置文件当中的变量__"},"next":{"title":"VSCode中使用ESLint作为Vue文件的代码格式化工具","link":"post/2021/202106/VSCode中使用ESLint作为代码格式化工具"},"plink":"http://blog.lipanpanx.com/post/2021/202106/VSCode的task系统__/","reward":true,"copyright":{"author":"李攀攀","link":"<a href=\"http://blog.lipanpanx.com/post/2021/202106/VSCode的task系统__/\" title=\"VSCode的task系统\">http://blog.lipanpanx.com/post/2021/202106/VSCode的task系统__/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"},"reading_time":"598 字约 4 分钟"}