{"title":"Vue2组件化","date":"2021-03-03T10:56:47.000Z","date_formatted":{"ll":"2021年3月3日","L":"2021/03/03","MM-DD":"03-03"},"link":"post/2021/202103/Vue2组件化","tags":["Vue2","Vue2组件"],"categories":["Vue相关"],"updated":"2022-01-16T00:35:15.352Z","content":"<h2 id=\"组件化的意义\">组件化的意义<a title=\"#组件化的意义\" href=\"#组件化的意义\"></a></h2>\n<h2 id=\"自定义组件\">自定义组件<a title=\"#自定义组件\" href=\"#自定义组件\"></a></h2>\n<p>自定义一个组件方法有很多,但是背后的创建逻辑却大同小异,有三个核心要素是必须的:<br>\n1&gt;组件构造(传递给构造器的组件模板只能有一个根元素)<br>\n2&gt;组件注册<br>\n3&gt;组件使用</p>\n<p>基于上面的三个核心要素诞生了好多创建组件的方式,下面我简单介绍一下我使用vscode snippets创建组件的过程:</p>\n<h2 id=\"创建全局组件\">创建全局组件<a title=\"#创建全局组件\" href=\"#创建全局组件\"></a></h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;Vue.component&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;prefix&quot;</span>: <span class=\"string\">&quot;Vue.component&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;body&quot;</span>: [</span><br><span class=\"line\">        <span class=\"string\">&quot;Vue.component(&#x27;$&#123;1:组件名称&#125;&#x27;, &#123;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    template:&#x27;#$&#123;1:组件模板id&#125;&#x27;, //$&#123;0:&lt;template id=&#x27;$&#123;1:组件模板id&#125;&#x27;&gt; &lt;div class=&#x27;$&#123;1:组件根元素类名&#125;&#x27;&gt; &lt;div&gt;我是组件$&#123;1:组件名称&#125;&lt;/div&gt;&lt;/div&gt; &lt;/template&gt;&#125;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    data:function()&#123;return&#123;&#125;&#125;,&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    methods:&#123;&#125;,components:&#123;&#125;,&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;&#125;);&quot;</span>,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">&quot;scope&quot;</span>: <span class=\"string\">&quot;javascript&quot;</span>,</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>全局组件注册需要用到Vue.component(id,[definition])函数,我们可以向这个函数提供 组件名称和组件对象来 注册组件<br>\n当我们传递组件对象的时候 Vue.component()会自动帮助我们使用Vue.extend()构造组件</p>\n<p>上面的这段代码能够帮助用户迅速的注册一个全局组件,在用户输入组件名称之后,snippets会根据输入的名称自动生成用于构造组件的组件对象和组件模板(第5行注释就是模板),然后用户只需要剪切模板到合适的位置就行了, 注册组件和组件模板 都搞定之后  用户只需要在合适的位置使用 &lt;组件名&gt;&lt;/组件名&gt; 就能使用组件啦</p>\n<h2 id=\"创建局部组件\">创建局部组件<a title=\"#创建局部组件\" href=\"#创建局部组件\"></a></h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;const-component&quot;</span>:&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;prefix&quot;</span>: <span class=\"string\">&quot;const-component&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;body&quot;</span>: [</span><br><span class=\"line\">        <span class=\"string\">&quot;const $&#123;1:组件引用名&#125;=&#123;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    template:&#x27;#$&#123;1:组件模板id&#125;&#x27;,&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    data:function()&#123;return&#123;&#125;&#125;,&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    methods:&#123;&#125;,components:&#123;&#125;,&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;&#125;; //$&#123;0:&lt;template id=&#x27;$&#123;1:组件模板id&#125;&#x27;&gt; &lt;div class=&#x27;$&#123;1:模板根元素类名&#125;&#x27;&gt; &lt;div&gt;我是组件$&#123;1:组件名称&#125;&lt;/div&gt;&lt;/div&gt; &lt;/template&gt;&#125;&quot;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">&quot;scope&quot;</span>: <span class=\"string\">&quot;javascript&quot;</span>,</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>这段创建局部组件的snippets和上面的 创建全局组件的snippets基本大同小异, 只是局部组件的注册和全局组件的注册有所不同<br>\n局部组件 需要在vue实例的 components字段当中传递组件对象的引用或者直接传递组件对象 代码如下:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> vue = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>: &#123;&#125;,</span><br><span class=\"line\">    <span class=\"attr\">methods</span>: &#123;&#125;,</span><br><span class=\"line\">    <span class=\"attr\">computed</span>: &#123;&#125;,</span><br><span class=\"line\">    <span class=\"attr\">watch</span>: &#123;&#125;,</span><br><span class=\"line\">    <span class=\"attr\">filters</span>: &#123;&#125;,</span><br><span class=\"line\">    <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;组件名称&quot;</span>:组件引用名</span><br><span class=\"line\">        <span class=\"string\">&#x27;组件名称&#x27;</span>:&#123;</span><br><span class=\"line\">            <span class=\"attr\">template</span>:<span class=\"string\">&#x27;#组件模板id&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">data</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"keyword\">return</span>&#123;&#125;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">methods</span>:&#123;&#125;,<span class=\"attr\">props</span>:[],<span class=\"attr\">components</span>:&#123;&#125;,</span><br><span class=\"line\">        &#125;, </span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>如果直接在vue实例的components字段当中使用直接传递组件对象的方式 去注册局部组件 可以使用下面的snippets:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;sub-component&quot;</span>:&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;prefix&quot;</span>: <span class=\"string\">&quot;sub-component&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;body&quot;</span>: [</span><br><span class=\"line\">        <span class=\"string\">&quot;&#x27;$&#123;1:组件名称&#125;&#x27;:&#123;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    template:&#x27;#$&#123;1:模板id&#125;&#x27;,&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    data:function()&#123;return&#123;&#125;&#125;,&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    methods:&#123;&#125;,props:[],components:&#123;&#125;,&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;&#125;, //$&#123;0:&lt;template id=&#x27;$&#123;1:模板id&#125;&#x27;&gt; &lt;div class=&#x27;$&#123;1:模板根元素类名&#125;&#x27;&gt; &lt;div&gt;我是组件$&#123;1:组件名称&#125;&lt;/div&gt;&lt;/div&gt; &lt;/template&gt;&#125;&quot;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">&quot;scope&quot;</span>: <span class=\"string\">&quot;javascript&quot;</span>,</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>局部组件之所以叫局部组件,那就是他的使用范围是被限定的,如果某个Vue实例注册了局部组件,那么这个局部组件就只能在这个实例中使用,全局组件则可以在多个Vue实例当中共用</p>\n<h2 id=\"自定义组件中的data和methods\">自定义组件中的data和methods<a title=\"#自定义组件中的data和methods\" href=\"#自定义组件中的data和methods\"></a></h2>\n<p>从上方自定义组件的snippets我们也可以看出来 自定义组件时候也可以传递 data 和 methods属性<br>\n因为在自定义组件的模板中 我们也会使用到自定义的函数 也会使用自定义的数据 所以就像Vue实例一样我们也需要这两个属性</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;test&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;test&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.prevent</span>=<span class=\"string\">&#x27;clickHandler($event)&#x27;</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在创建Vue实例所使用 对象 当中 data 和 methods 属性的值都是 一个对象<br>\n自定义组件的 methods属性和 Vue实例创建时候提供的methods属性使用方式几乎相同 都是一个包含若干函数的对象</p>\n<p>但是 自定义组件当中的 data属性却是一个函数 这个和Vue实例创建的时候提供的data属性是完全不同的</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">&#x27;test&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">template</span>: <span class=\"string\">&#x27;#test&#x27;</span>, <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"attr\">data</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">msg</span>:<span class=\"string\">&quot;hehe&quot;</span>,</span><br><span class=\"line\">    &#125; &#125;,</span><br><span class=\"line\">    <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">clickHandler</span>(<span class=\"params\">x</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, <span class=\"attr\">components</span>: &#123;&#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>为什么创建自定义组件所传递的组件对象当中的 data属性是一个函数呢,其实原因也很简单,假如我们有一个组件X, 这个组件X我们可能在网页当中使用很多次, 这就是组件的复用, 但是组件复用的前提是每个组件是不完全相同的, 即使都是组件X,每个组件应该显示不同的数据, 如何确保每个组件显示的数据是不同的呢, 这就需要 每个组件和自己的数据绑定而不是和公用的数据绑定, 所以自定义组件的data属性就是一个返回对象的函数, 这个函数会针对每个组件X返回一个对象, 这个对象会和每个组件X进行绑定, 这样以来每个组件X就会有自己独享的数据对象了.</p>\n<h2 id=\"组件切换与动态组件\">组件切换与动态组件<a title=\"#组件切换与动态组件\" href=\"#组件切换与动态组件\"></a></h2>\n<p>有时候我们需要在不同的组件之间进行切换, 对于一般的组件切换我们可以使用 v-if来实现,v-if虽然也不错 但是官方提供了更加有趣的方案 那就是动态组件, 而且 通过 <code>&lt;keep-alive&gt;</code> 标签 我们可以实现保存组件切换前后的状态</p>\n<p>假设我们有两个组件 分别是 组件aaa 和组件bbb  如果想要通过动态组件实现2个组件之间的切换就比较简单</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;app&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.prevent</span>=<span class=\"string\">&#x27;clickHandler($event)&#x27;</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">keep-alive</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">:is</span>=<span class=\"string\">&#x27;componentx&#x27;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">component</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">keep-alive</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>如上 我们为<code>&lt;component&gt;</code>标签的is属性绑定一个变量 componentx, 用这个变量我们久能控制需要被显示的组件是哪个组件<br>\n然后 通过按钮的点击事件就可以去改变 变量 componentx的值 也就可以切换当前显示的组件了,而且由于<code>&lt;component&gt;</code>标签是被放在 <code>&lt;keep-alive&gt;</code>标签里面的所以组件切换前后 组件的状态能够被很好的保存, 假如组件aaa中有个checkbox是check的状态, 那么切换到组件bbb再切换回组件aaa 这个checkbox依然会保持check的状态</p>\n<h2 id=\"父子组件\">父子组件<a title=\"#父子组件\" href=\"#父子组件\"></a></h2>\n<p>组件和Vue实例一样都能使用components属性,也就是说每个组件都能通过components属性定义自己的局部组件,也就是每个组将都能有自己的子组件</p>\n<p>就像上文中的局部组件只能在相应的Vue实例当中使用一样  子组件也是只能在父组件当中使用<br>\n如果我们定义了一个父组件father, 并且在father组件对象当中的components属性中又定义了一个组件son, 那么 <code>&lt;son&gt;&lt;\\/son&gt;</code> 就只能在father组件的模板当中使用</p>\n<p>父子组件这样的父子关系,让他们之间的数据交换比其他组件之间更加容易 更加灵活</p>\n<h3 id=\"子组件使用父组件的数据\">子组件使用父组件的数据<a title=\"#子组件使用父组件的数据\" href=\"#子组件使用父组件的数据\"></a></h3>\n<p>子组件使用父组件中数据的2个步骤:</p>\n<p>1&gt; prop是你可以在组件上注册的一些自定义attribute,我们在创建子组件的时候通过提供props来声明我们的子组件定义了那些prop, 也就是 我们创建子组件的时候想要注册的一些自定义 attribute 写道 props当中去,如下son组件当中声明了2个自定义的 attribute 分别是 xxx和yyy .</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">components: &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;father&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">template</span>: <span class=\"string\">&#x27;#father&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">data</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">age</span>:<span class=\"number\">28</span>,</span><br><span class=\"line\">            <span class=\"attr\">name</span>:<span class=\"string\">&quot;lipanpan&quot;</span></span><br><span class=\"line\">        &#125; &#125;,</span><br><span class=\"line\">        <span class=\"attr\">methods</span>: &#123;&#125;, <span class=\"attr\">props</span>: [], </span><br><span class=\"line\">        <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;son&#x27;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">template</span>: <span class=\"string\">&#x27;#son&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">data</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> &#123;&#125; &#125;,</span><br><span class=\"line\">                <span class=\"attr\">methods</span>: &#123;&#125;, <span class=\"attr\">props</span>: [<span class=\"string\">&quot;xxx&quot;</span>,<span class=\"string\">&quot;yyy&quot;</span>], <span class=\"attr\">components</span>: &#123;&#125;,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>2&gt; 然后我们在父组件的模板当中使用子组件的时候 就可以将自己的数据绑定到子组件的属性上面,由于刚才我们为子组件定义了2个属性 xxx和yyy, 我们将父组件的 age 和name 绑定到这2个属性上,然后我们在子组件的模板当中 使用自己的属性就相当于使用父组件的数据.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;father&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;father&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是组件father<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">son</span> <span class=\"attr\">:xxx</span>=<span class=\"string\">&quot;age&quot;</span> <span class=\"attr\">:yyy</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span>在父组件当中使用子组件<span class=\"tag\">&lt;/<span class=\"name\">son</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;son&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;son&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是组件son<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>来自父组件的数据xxx:&#123;&#123;xxx&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>来自父组件的数据yyy:&#123;&#123;yyy&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"子组件使用父组件的方法\">子组件使用父组件的方法<a title=\"#子组件使用父组件的方法\" href=\"#子组件使用父组件的方法\"></a></h3>\n<p>子组件使用父组件当中方法的2个步骤:<br>\n1&gt; 首先在父组件中通过v-on 绑定事件监听器</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;father&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;father&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是组件father<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">son</span> @<span class=\"attr\">father-func</span>=<span class=\"string\">&#x27;fatherSay&#x27;</span>&gt;</span>在父组件当中使用子组件<span class=\"tag\">&lt;/<span class=\"name\">son</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>2&gt; 然后在子组件的某个函数当中 通过$emit()触发事件 调用事件处理函数(这里是父组件当中的方法)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;son&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;son&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是组件son<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.prevent</span>=<span class=\"string\">&#x27;sonFunc($event)&#x27;</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">components: &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;father&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">template</span>: <span class=\"string\">&#x27;#father&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">data</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> &#123;&#125; &#125;,</span><br><span class=\"line\">        <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"title\">fatherSay</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">                alert(<span class=\"string\">&quot;我是father组件的方法&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, <span class=\"attr\">props</span>: [], </span><br><span class=\"line\">        <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;son&#x27;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">template</span>: <span class=\"string\">&#x27;#son&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">data</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> &#123;&#125; &#125;,</span><br><span class=\"line\">                <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">                    <span class=\"function\"><span class=\"title\">sonFunc</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">                        <span class=\"built_in\">this</span>.$emit(<span class=\"string\">&quot;father-func&quot;</span>)</span><br><span class=\"line\">                        <span class=\"comment\">// 使用 $emit 触发事件 </span></span><br><span class=\"line\">                        <span class=\"comment\">// 传递给$emit的方法名字是一个字符串</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;, <span class=\"attr\">props</span>: [], <span class=\"attr\">components</span>: &#123;&#125;,</span><br><span class=\"line\">            &#125;, </span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;, </span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h3 id=\"子组件将数据传递给父组件\">子组件将数据传递给父组件<a title=\"#子组件将数据传递给父组件\" href=\"#子组件将数据传递给父组件\"></a></h3>\n<p>子组件传递数据给父组件可以通过 调用父组件的方法来实现</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">components: &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;father&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">template</span>: <span class=\"string\">&#x27;#father&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">data</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">input_msg</span>:<span class=\"literal\">undefined</span>,</span><br><span class=\"line\">        &#125; &#125;,</span><br><span class=\"line\">        <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"title\">fatherSay</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;我是father组件的方法&quot;</span>);</span><br><span class=\"line\">                <span class=\"built_in\">this</span>.input_msg=data</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;, <span class=\"attr\">props</span>: [], </span><br><span class=\"line\">        <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;son&#x27;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">template</span>: <span class=\"string\">&#x27;#son&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">data</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> &#123;&#125; &#125;,</span><br><span class=\"line\">                <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">                    <span class=\"function\"><span class=\"title\">sonFunc</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">                        <span class=\"built_in\">this</span>.$emit(<span class=\"string\">&quot;father-func&quot;</span>,<span class=\"built_in\">Math</span>.random())</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;, <span class=\"attr\">props</span>: [], <span class=\"attr\">components</span>: &#123;&#125;,</span><br><span class=\"line\">            &#125;, <span class=\"comment\">//</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;, <span class=\"comment\">//</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>由上面的代码可以看到 子组件在传递数据给父组件的时候,只需要在使用<code>vm.$emit(&quot;xxx&quot;,[...args])</code>调用父组件的方法的时候把需要传递的数据当作参数传递过去就行了,然后在父组件的方法中接收和使用子组件当中传递过来的参数</p>\n<h3 id=\"多级组件数据传递\">多级组件数据传递<a title=\"#多级组件数据传递\" href=\"#多级组件数据传递\"></a></h3>\n<p>由上文我们可以知道 子组件可以使用父组件的数据, 子组件可以调用父组件的方法并且将数据传递给父组件, 但是如果组件的层级比较多, 比如子组件使用爷爷组件的数据和方法应该如何做: 这里只是简单介绍一种相对容易理解但是挺麻烦的做法那就是一层层的传递, 儿子组件想要使用爷爷组件的数据和方法首先把想要使用的数据和方法从爷爷组件传递给父组件,然后再从父组件传递给儿子组件就行了.</p>\n<h2 id=\"组件中的命名注意点\">组件中的命名注意点<a title=\"#组件中的命名注意点\" href=\"#组件中的命名注意点\"></a></h2>\n<h3 id=\"组件名子的命名\">组件名子的命名<a title=\"#组件名子的命名\" href=\"#组件名子的命名\"></a></h3>\n<blockquote>\n<p>注册组建的时候如果组件的名字使用了驼峰命名法, 那么html中使用组件的时候需要使用短横线命名法去使用这个组件. 例如: 注册时: myFather -&gt; 使用时: <code>&lt;my-father&gt;&lt;/my-father&gt;</code></p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">&#x27;myFather&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">template</span>: <span class=\"string\">&#x27;#myFather&#x27;</span>, <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"attr\">data</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> &#123;&#125; &#125;,</span><br><span class=\"line\">    <span class=\"attr\">methods</span>: &#123;&#125;, <span class=\"attr\">components</span>: &#123;&#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;app&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- &lt;myFather&gt;&lt;/myFather&gt; 注册组件的时候使用驼峰命名 使用组件的时候不能使用驼峰命名 --&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">my-father</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">my-father</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;myFather&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;myFather&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是组件myFather<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"组件传入变量命名\">组件传入变量命名<a title=\"#组件传入变量命名\" href=\"#组件传入变量命名\"></a></h3>\n<blockquote>\n<p>父组件传递数据给子组件的时候, 传入的变量名如果使用短横线命名方式,子组件得到的变量会被转换称为驼峰命名方式的变量. 例如: 传递时: parent-name=“name” -&gt; 接收时: props: [“parentName”]</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;father&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;father&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是组件father<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- &lt;son :parentName=&#x27;names&#x27;&gt;&lt;/son&gt; 父组件中使用驼峰命名法传递给子组件的变量名会被全部转换成为小写--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">son</span> <span class=\"attr\">:parent-name</span>=<span class=\"string\">&#x27;names&#x27;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">son</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 使用短横线命名法传递给子组件的变量名 会被转换成为驼峰命名法 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;son&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;son&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是组件son<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>来自父组件的数据:&#123;&#123;parentName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">&#x27;father&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">template</span>: <span class=\"string\">&#x27;#father&#x27;</span>, <span class=\"comment\">//</span></span><br><span class=\"line\">    <span class=\"attr\">data</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">names</span>:[<span class=\"string\">&quot;zhangsan&quot;</span>,<span class=\"string\">&quot;lisi&quot;</span>]</span><br><span class=\"line\">    &#125; &#125;,</span><br><span class=\"line\">    <span class=\"attr\">methods</span>: &#123;&#125;, <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;son&#x27;</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">template</span>: <span class=\"string\">&#x27;#son&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">data</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> &#123;&#125; &#125;,</span><br><span class=\"line\">            <span class=\"attr\">methods</span>: &#123;&#125;, <span class=\"attr\">props</span>: [<span class=\"string\">&quot;parentName&quot;</span>], <span class=\"attr\">components</span>: &#123;&#125;,</span><br><span class=\"line\">        &#125;, <span class=\"comment\">//</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"组件传入的方法命名\">组件传入的方法命名<a title=\"#组件传入的方法命名\" href=\"#组件传入的方法命名\"></a></h3>\n<blockquote>\n<p>父组件将自己的方法传递给子组件的时候, 传入的方法名字如果使用驼峰命名法, 这个传入的方法名会被转换成为全部小写的形式,因为html属性是大小写不敏感的, 所以我们用v-on绑定的事件名称即使有大写字母也会全部被转换成为小写.<br>\n例如: 传递时: @parent-say=“say” -&gt; 触发时: this.$emit(“parent-say”);</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;father&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;father&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是组件father<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">son</span> @<span class=\"attr\">fatherFunc</span>=<span class=\"string\">&#x27;say&#x27;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">son</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;son&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;son&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是组件son<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click.prevent</span>=<span class=\"string\">&#x27;clickHandler($event)&#x27;</span>&gt;</span>触发器按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">&#x27;father&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">template</span>: <span class=\"string\">&#x27;#father&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">names</span>:[<span class=\"string\">&quot;zhangsan&quot;</span>,<span class=\"string\">&quot;lisi&quot;</span>]</span><br><span class=\"line\">    &#125; &#125;,</span><br><span class=\"line\">    <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">say</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;我是父组件的方法&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, </span><br><span class=\"line\">    <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;son&#x27;</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">template</span>: <span class=\"string\">&#x27;#son&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">data</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> &#123;&#125; &#125;,</span><br><span class=\"line\">            <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">                <span class=\"function\"><span class=\"title\">clickHandler</span>(<span class=\"params\">$event</span>)</span>&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">this</span>.$emit(<span class=\"string\">&quot;fatherfunc&quot;</span>)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;, <span class=\"attr\">props</span>: [], <span class=\"attr\">components</span>: &#123;&#125;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"组件中的插槽是什么?\">组件中的插槽是什么?<a title=\"#组件中的插槽是什么?\" href=\"#组件中的插槽是什么?\"></a></h2>\n<p>默认情况下使用子组件时在子组件中编写的元素是不会被渲染的,如果子组件中有部分内容是使用时才确定的, 那么我们就可以使用插槽. 插槽就是在子组件中放一个&quot;坑&quot;, 以后由父组件来&quot;填&quot;</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;father&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;father&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是组件father<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">son</span>&gt;</span>如果没有插槽 这句话是不会被渲染到页面上的 只会渲染son组件模板当中的内容 <span class=\"tag\">&lt;/<span class=\"name\">son</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"什么是匿名插槽?\">什么是匿名插槽?<a title=\"#什么是匿名插槽?\" href=\"#什么是匿名插槽?\"></a></h3>\n<p>匿名插槽是子组件根元素当中的 <code>&lt;slot&gt;可以有默认值&lt;/slot&gt;</code>标签, 这些标签所在的位置就是预留的坑位,当我们在父组件当中使用子组件时如果往子组件的标签对当中写入了内容这些被写入的内容就会把  <code>&lt;slot&gt;&lt;/slot&gt;</code>标签以及其包裹的内容替换掉,如果子组件当中有多出<code>&lt;slot&gt;&lt;/slot&gt;</code>则替换多次</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;father&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;father&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是组件father<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">son</span>&gt;</span>我会替换掉slot标签以及被slot标签包裹的内容<span class=\"tag\">&lt;/<span class=\"name\">son</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;son&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;son&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span>插槽默认内容 我在网页当中会直接被渲染成字符串<span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是组件son<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span>&gt;</span>插槽默认内容 我在网页当中会直接被渲染成字符串<span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"什么是具名插槽?\">什么是具名插槽?<a title=\"#什么是具名插槽?\" href=\"#什么是具名插槽?\"></a></h3>\n<p>具名插槽和匿名插槽所差无几,只不过具名插槽的<code>&lt;slot&gt;</code>标签 有个name属性,这个属性就是插槽的名字, 在父组件中向子组件标签对中插入内容时候 可以通过<code>slot=name</code>属性控制插入到对应 name的插槽当中去</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;father&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;father&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是组件father<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">son</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;one&quot;</span>&gt;</span>往插槽名字为one的插槽中插入内容1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;two&quot;</span>&gt;</span>往插槽名字为two的插槽当中插入内容<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;one&quot;</span>&gt;</span>往插槽名字为one的插槽中插入内容2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;two&quot;</span>&gt;</span>往插槽名字为two的插槽当中插入内容<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">son</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;son&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;son&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;one&#x27;</span>&gt;</span>插槽默认内容<span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是组件son<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;two&#x27;</span>&gt;</span>插槽默认内容<span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"什么是作用域插槽?\">什么是作用域插槽?<a title=\"#什么是作用域插槽?\" href=\"#什么是作用域插槽?\"></a></h3>\n<p>作用域插槽就是可以传递数据的插槽 子组件当中的数据通过<code>&lt;slot v-bind:'xxx'='xxx'&gt;&lt;/slot&gt;</code> 的形式传递给父组件,然后父组件通过 <code>&lt;template slot-scope='obj'&gt;&lt;template&gt;</code>的形式来使用子组件当中的数据</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;son&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;son&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是组件son<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">:names</span>=<span class=\"string\">&quot;names&quot;</span> <span class=\"attr\">:test</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span>插槽默认内容<span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;father&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;father&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是组件father<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">son</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot-scope</span>=<span class=\"string\">&quot;obj&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;name in obj.names&quot;</span> <span class=\"attr\">:key</span>=<span class=\"string\">&quot;name.id&quot;</span>&gt;</span></span><br><span class=\"line\">                    &#123;&#123; name &#125;&#125;</span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">                &#123;&#123;obj&#125;&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">son</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"v-slot指令怎么使用?\">v-slot指令怎么使用?<a title=\"#v-slot指令怎么使用?\" href=\"#v-slot指令怎么使用?\"></a></h3>\n<p>v-slot指令是 Vue2.6 之后引入的指令,v-slot指令 使得在父组件当中书写插入到子组件当中的内容时更加的方便, 我写了2个snippets来快速使用这个指令:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;slot&quot;</span>:&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;prefix&quot;</span>: <span class=\"string\">&quot;slot&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;body&quot;</span>: [</span><br><span class=\"line\">        <span class=\"string\">&quot;&lt;slot $&#123;1:name=&#x27;$&#123;2:slot-name&#125;&#x27;&#125;$&#123;0&#125;&gt;插槽默认内容&lt;/slot&gt;&quot;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">&quot;scope&quot;</span>: <span class=\"string\">&quot;html&quot;</span>,</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;vslot&quot;</span>:&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;prefix&quot;</span>: <span class=\"string\">&quot;vslot&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;body&quot;</span>: [</span><br><span class=\"line\">        <span class=\"string\">&quot;&lt;template #$&#123;1:default&#125;=&#x27;obj&#x27;&gt;$&#123;0:需要被插入的内容&#125;&lt;/template&gt;&quot;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">&quot;scope&quot;</span>: <span class=\"string\">&quot;html&quot;</span>,</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>首先就是创建插槽的 slot代码段,这个代码段在子组件当中使用 可以快速创建匿名插槽和具名插槽, 在写完插槽的名字之后 你就可以进行随意的数据绑定把子组件的数据传递给父组件的使用者<br>\n然后就是vslot代码段, 这个代码段在父组件当中使用,  可以快速的创建 带v-slot(#)属性的 template标签, 这个标签对应的默认插槽是匿名插槽(#default), 这个标签同时又一个默认对象obj,这个对象能够接收 子组件的插槽通过v-bind传递过来的数据</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;father&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;father&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是组件father<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">son</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">template</span> #<span class=\"attr\">one</span>=<span class=\"string\">&#x27;obj&#x27;</span>&gt;</span></span><br><span class=\"line\">                &#123;&#123;obj&#125;&#125; </span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">son</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;son&#x27;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;son&#x27;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我是组件son<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">slot</span> <span class=\"attr\">name</span>=<span class=\"string\">&#x27;one&#x27;</span> <span class=\"attr\">:names</span>=<span class=\"string\">&quot;names&quot;</span> <span class=\"attr\">:test</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span>插槽默认内容<span class=\"tag\">&lt;/<span class=\"name\">slot</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","prev":{"title":"Vuex基本使用","link":"post/2021/202103/Vuex基本使用"},"next":{"title":"ShareX截图自动添加水印","link":"post/2021/202102/ShareX截图自动添加水印"},"plink":"http://blog.lipanpanx.com/post/2021/202103/Vue2组件化/","toc":[{"id":"组件化的意义","title":"组件化的意义","index":"1"},{"id":"自定义组件","title":"自定义组件","index":"2"},{"id":"创建全局组件","title":"创建全局组件","index":"3"},{"id":"创建局部组件","title":"创建局部组件","index":"4"},{"id":"自定义组件中的data和methods","title":"自定义组件中的data和methods","index":"5"},{"id":"组件切换与动态组件","title":"组件切换与动态组件","index":"6"},{"id":"父子组件","title":"父子组件","index":"7","children":[{"id":"子组件使用父组件的数据","title":"子组件使用父组件的数据","index":"7.1"},{"id":"子组件使用父组件的方法","title":"子组件使用父组件的方法","index":"7.2"},{"id":"子组件将数据传递给父组件","title":"子组件将数据传递给父组件","index":"7.3"},{"id":"多级组件数据传递","title":"多级组件数据传递","index":"7.4"}]},{"id":"组件中的命名注意点","title":"组件中的命名注意点","index":"8","children":[{"id":"组件名子的命名","title":"组件名子的命名","index":"8.1"},{"id":"组件传入变量命名","title":"组件传入变量命名","index":"8.2"},{"id":"组件传入的方法命名","title":"组件传入的方法命名","index":"8.3"}]},{"id":"组件中的插槽是什么?","title":"组件中的插槽是什么?","index":"9","children":[{"id":"什么是匿名插槽?","title":"什么是匿名插槽?","index":"9.1"},{"id":"什么是具名插槽?","title":"什么是具名插槽?","index":"9.2"},{"id":"什么是作用域插槽?","title":"什么是作用域插槽?","index":"9.3"},{"id":"v-slot指令怎么使用?","title":"v-slot指令怎么使用?","index":"9.4"}]}],"reward":true,"copyright":{"author":"李攀攀","link":"<a href=\"http://blog.lipanpanx.com/post/2021/202103/Vue2组件化/\" title=\"Vue2组件化\">http://blog.lipanpanx.com/post/2021/202103/Vue2组件化/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"},"reading_time":"4595 字约 31 分钟"}