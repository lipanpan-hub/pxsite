{"title":"Vue生命周期钩子","date":"2021-03-05T11:03:32.000Z","date_formatted":{"ll":"2021年3月5日","L":"2021/03/05","MM-DD":"03-05"},"link":"post/2021/202103/Vue生命周期","tags":["Vue2","Vue2生命周期"],"categories":["Vue"],"updated":"2021-11-16T03:48:28.487Z","content":"<p>Vue生命周期钩子是Vue开发者为Vue使用者预留的接口,使用这些接口我们能够在Vue生命周期的各个阶段做一些灵活的数据控制,来达到一些不可告人的目的.</p>\n<h2 id=\"生命周期钩子的使用\">生命周期钩子的使用<a title=\"#生命周期钩子的使用\" href=\"#生命周期钩子的使用\"></a></h2>\n<p>在我们创建Vue实例的时候,需要提供一个对象,这个对象包括创建Vue实例的各种Options, Vue生命周期钩子是这些Options的一部分, 他们的值都是函数,当Vue实例到达某个生命周期后,就会尝试去调用这些生命周期对应的钩子函数. 对于Vue2.x而言目前已知的钩子函数包括下面11个:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> vue = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">        <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">beforeCreate</span>(<span class=\"params\"></span>)</span> &#123; &#125;,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">created</span>(<span class=\"params\"></span>)</span> &#123; &#125;,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">beforeMount</span>(<span class=\"params\"></span>)</span> &#123; &#125;,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">mounted</span>(<span class=\"params\"></span>)</span> &#123; &#125;,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">beforeUpdate</span>(<span class=\"params\"></span>)</span> &#123; &#125;,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">updated</span>(<span class=\"params\"></span>)</span> &#123; &#125;,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">activated</span>(<span class=\"params\"></span>)</span> &#123; &#125;,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">deactivated</span>(<span class=\"params\"></span>)</span> &#123; &#125;,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">beforeDestroy</span>(<span class=\"params\"></span>)</span> &#123; &#125;,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">destroyed</span>(<span class=\"params\"></span>)</span> &#123; &#125;,</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">errorCaptured</span>(<span class=\"params\"></span>)</span> &#123; &#125;,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"beforecreate\">beforeCreate<a title=\"#beforecreate\" href=\"#beforecreate\"></a></h2>\n<blockquote>\n<p>在调用beforeCreate的时候, 仅仅表示Vue实例刚刚被创建出来, 此时此刻还没有初始化好Vue实例中的数据和方法, 所以此时此刻还不能访问Vue实例中保存的数据和方法</p>\n</blockquote>\n<h2 id=\"created\">created<a title=\"#created\" href=\"#created\"></a></h2>\n<blockquote>\n<p>在调用created的时候, 是我们最早能够访问Vue实例中保存的数据和方法的地方</p>\n</blockquote>\n<h2 id=\"beforemount\">beforeMount<a title=\"#beforemount\" href=\"#beforemount\"></a></h2>\n<blockquote>\n<p>在调用beforeMount的时候, 表示Vue已经编译好了最终模板, 但是还没有将最终的模板渲染到界面上</p>\n</blockquote>\n<h2 id=\"mounted\">mounted<a title=\"#mounted\" href=\"#mounted\"></a></h2>\n<blockquote>\n<p>在调用mounted的时候, 表示Vue已经完成了模板的渲染, 表示我们已经可以拿到界面上渲染之后的内容了</p>\n</blockquote>\n<h2 id=\"beforeupdate\">beforeUpdate<a title=\"#beforeupdate\" href=\"#beforeupdate\"></a></h2>\n<blockquote>\n<p>在调用beforeUpdate的时候, 表示Vue实例中保存的数据被修改了<br>\n注意点: 只有保存的数据被修改了才会调用beforeUpdate, 否则不会调用<br>\n注意点: 在调用beforeUpdate的时候, 数据已经更新了, 但是界面还没有更新</p>\n</blockquote>\n<h2 id=\"updated\">updated<a title=\"#updated\" href=\"#updated\"></a></h2>\n<blockquote>\n<p>在调用updated的时候, 表示Vue实例中保存的数据被修改了, 并且界面也同步了修改的数据了<br>\n也就是说: 数据和界面都同步更新之后就会调用updated</p>\n</blockquote>\n<h2 id=\"activated\">activated<a title=\"#activated\" href=\"#activated\"></a></h2>\n<blockquote>\n<p>keep-alive 缓存的组件激活时会调用activated</p>\n</blockquote>\n<h2 id=\"deactivated\">deactivated<a title=\"#deactivated\" href=\"#deactivated\"></a></h2>\n<blockquote>\n<p>keep-alive 缓存的组件停用时会调用deactivated</p>\n</blockquote>\n<h2 id=\"beforedestroy\">beforeDestroy<a title=\"#beforedestroy\" href=\"#beforedestroy\"></a></h2>\n<blockquote>\n<p>在调用beforeDestroy的时候, 表示当前组件即将被销毁了<br>\n注意点: 只要组件不被销毁, 那么beforeDestroy就不会调用,beforeDestroy函数是我们最后能够访问到组件数据和方法的函数</p>\n</blockquote>\n<h2 id=\"destroyed\">destroyed<a title=\"#destroyed\" href=\"#destroyed\"></a></h2>\n<blockquote>\n<p>在调用destroyed的时候, 表示当前组件已经被销毁了<br>\n注意点: 只要组件不被销毁, 那么destroyed就不会调用, 不要在这个生命周期方法中再去操作组件中数据和方法</p>\n</blockquote>\n<h2 id=\"errorcaptured\">errorCaptured<a title=\"#errorcaptured\" href=\"#errorcaptured\"></a></h2>\n<blockquote>\n<p>捕获一个来自子孙组件的错误时会调用errorCaptured</p>\n</blockquote>\n","prev":{"title":"utools插件重载问题","link":"post/2021/202110/utools插件重载"},"next":{"title":"Vuex基本使用","link":"post/2021/202103/Vuex基本使用"},"plink":"http://lipanpanx.com/post/2021/202103/Vue生命周期/","toc":[{"id":"生命周期钩子的使用","title":"生命周期钩子的使用","index":"1"},{"id":"beforecreate","title":"beforeCreate","index":"2"},{"id":"created","title":"created","index":"3"},{"id":"beforemount","title":"beforeMount","index":"4"},{"id":"mounted","title":"mounted","index":"5"},{"id":"beforeupdate","title":"beforeUpdate","index":"6"},{"id":"updated","title":"updated","index":"7"},{"id":"activated","title":"activated","index":"8"},{"id":"deactivated","title":"deactivated","index":"9"},{"id":"beforedestroy","title":"beforeDestroy","index":"10"},{"id":"destroyed","title":"destroyed","index":"11"},{"id":"errorcaptured","title":"errorCaptured","index":"12"}],"reward":true,"copyright":{"author":"李攀攀","link":"<a href=\"http://lipanpanx.com/post/2021/202103/Vue生命周期/\" title=\"Vue生命周期钩子\">http://lipanpanx.com/post/2021/202103/Vue生命周期/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"},"reading_time":"704 字约 5 分钟"}