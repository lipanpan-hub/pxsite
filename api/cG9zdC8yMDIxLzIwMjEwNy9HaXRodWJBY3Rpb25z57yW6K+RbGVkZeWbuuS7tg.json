{"title":"GithubActions编译lede固件","date":"2021-07-31T10:11:17.000Z","date_formatted":{"ll":"2021年7月31日","L":"2021/07/31","MM-DD":"07-31"},"link":"post/2021/202107/GithubActions编译lede固件","updated":"2022-02-01T01:24:26.644Z","content":"<p>这两天开源界不太平为了防止L大删库跑路,我决定把它的仓库fork到我自己的github账号下面用github actions自己编译固件.</p>\n<h2 id=\"fork-lede-仓库\">fork lede 仓库<a title=\"#fork-lede-仓库\" href=\"#fork-lede-仓库\"></a></h2>\n<p><a href=\"https://github.com/coolsnowwolf/lede\" target=\"_blank\">lede github仓库地址</a><br>\n进入L大的仓库 直接点击fork即可<br>\n<a href=\"https://github.com/lipanpan-hub/lede\" target=\"_blank\">我fork的仓库</a></p>\n<h2 id=\"创建自己的分支-并允许-github-actions\">创建自己的分支 并允许 github actions<a title=\"#创建自己的分支-并允许-github-actions\" href=\"#创建自己的分支-并允许-github-actions\"></a></h2>\n<p>仓库创建完成之后 可以在github dev 提供的在线编辑器当中快速的创建一个自己的分支(我新建了一个lpp_lede分支), 我们在自己的分支中处理自己的操作, 这样不会影响主分支, 当L大的仓库发生变化的时候 我们的主分支依然可以快速merge L大的提交.</p>\n<p><img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/HxCnrIQ.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>还有就是fork的仓库是默认不支持 github actions的, 需要我们手动enable. 打开自己fork过来的仓库的actions选项卡 点击<code>i understand my workflows,go ahead and enable them</code>就行了.</p>\n<h2 id=\"更改自己分支的-ci文件,-开始编译\">更改自己分支的 ci文件, 开始编译<a title=\"#更改自己分支的-ci文件,-开始编译\" href=\"#更改自己分支的-ci文件,-开始编译\"></a></h2>\n<p>github actions的ci文件就是 <code>.github/workflows/</code> 目录下的yml文件, lede源仓库中 此目录下存在一个 <code>opnewrt-ci.yml</code> 的文件, 这个文件定义了 github actions的所有行为,我们打开这个文件 可以看到作者规定了2中触发github actions执行编译的条件 一个是定时编译, 一个是由 release事件触发的编译. 这两种编译我都不需要我要的是手动编译. 所以我可以在我的分支上改为由push事件触发编译.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">on:</span><br><span class=\"line\">  schedule:</span><br><span class=\"line\">    - cron: 0 20 * * *</span><br><span class=\"line\">  release:</span><br><span class=\"line\">    types: [published]</span><br><span class=\"line\"><span class=\"comment\"># 上面这两种方式不需要 改为下面这样</span></span><br><span class=\"line\">on:</span><br><span class=\"line\">  push:</span><br><span class=\"line\">    branches: [ lpp_lede ]</span><br></pre></td></tr></table></figure>\n<p>这里切记 一切的更改都是发生在 自己的新分支上的 而不是项目的master分支上面的</p>\n<p><img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/LPuaQ7r.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>当我们在自己的分支上面提交更改完成的 <code>openwrt-ci.yml</code> 文件之后就能看到项目的主页会提示 lpp_lede分支发生了更改, 而且 github actions的编译行为也在 lpp_lede分支成功触发.</p>\n<p><img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/xd6qVry.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/9PfkiMk.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>然后我们坐等丰收的果实就行了</p>\n","prev":{"title":"Hyper-V安装lede软路由","link":"post/2021/202107/Hyper-V安装lede软路由"},"next":{"title":"Hyper-V虚拟交换机","link":"post/2021/202107/Hyper-V虚拟交换机"},"plink":"http://blog.lipanpanx.com/post/2021/202107/GithubActions编译lede固件/","toc":[{"id":"fork-lede-仓库","title":"fork lede 仓库","index":"1"},{"id":"创建自己的分支-并允许-github-actions","title":"创建自己的分支 并允许 github actions","index":"2"},{"id":"更改自己分支的-ci文件,-开始编译","title":"更改自己分支的 ci文件, 开始编译","index":"3"}],"reward":true,"copyright":{"author":"李攀攀","link":"<a href=\"http://blog.lipanpanx.com/post/2021/202107/GithubActions编译lede固件/\" title=\"GithubActions编译lede固件\">http://blog.lipanpanx.com/post/2021/202107/GithubActions编译lede固件/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"},"reading_time":"589 字约 4 分钟"}