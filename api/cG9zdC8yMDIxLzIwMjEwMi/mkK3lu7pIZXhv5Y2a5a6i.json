{"title":"搭建Hexo博客","date":"2021-02-01T17:22:48.000Z","date_formatted":{"ll":"2021年2月1日","L":"2021/02/01","MM-DD":"02-01"},"link":"post/2021/202102/搭建Hexo博客","categories":["其他"],"updated":"2021-11-16T03:48:28.483Z","content":"<p>重新搭个博客, 这里做一下记录</p>\n<span id=\"more\"></span>\n<h2 id=\"0x10-前情提要\">0x10 前情提要<a title=\"#0x10-前情提要\" href=\"#0x10-前情提要\"></a></h2>\n<p>最近决定重新搞个博客,申请个域名,搞的大气一些<br>\n之前的 <a href=\"http://xxx.gitee.com\">xxx.gitee.com</a> 确实有点拿不出手了</p>\n<h2 id=\"0x20-博客方案\">0x20 博客方案<a title=\"#0x20-博客方案\" href=\"#0x20-博客方案\"></a></h2>\n<p>搭建博客 现在有很多的方案,由于是个人博客,平常就是写一些技术文,也没有什么特殊的需求<br>\n所以就搞成静态博客就行了,但是静态博客也有很多方案可以选择 hexo hugo vuepress 等等<br>\n最终我还是选择了 hexo, hexo是js写的没有hugo(go语言写的)快,但是hexo相对比较成熟,主题的可选择项又多,而且我知道有比较厉害的博客是用hexo+next实现的, 比如<code>cuiqingcai.com</code>, 至于主题,我选择的是一个非常小众的主题inside,我感觉不错,所以就用了,由于是小众主题我已经做好了踩坑的准备了</p>\n<h2 id=\"0x30-着手开始搭建\">0x30 着手开始搭建<a title=\"#0x30-着手开始搭建\" href=\"#0x30-着手开始搭建\"></a></h2>\n<p>既然方案都想好了那就开始搭建</p>\n<h3 id=\"0x31-域名购买\">0x31 域名购买<a title=\"#0x31-域名购买\" href=\"#0x31-域名购买\"></a></h3>\n<p>这个比较简单 阿里云腾讯云都可以买,我在腾讯云上面买下了 <a href=\"http://lipanpanx.com\">lipanpanx.com</a> 年费是61<br>\n直接下单就行了,非常简单,不过如果是第一次买的话, 他会要求你进行实名认证, 你需要填写一个信息模板,然后等待审核,认证成功后才能购买,我的过往经验告诉我在腾讯云买域名要比在阿里云买更快,但是腾讯云的域名数据库貌似要比阿里云更新的慢,有些域名在阿里能搜到在腾讯搜不到</p>\n<h3 id=\"0x32-域名解析服务\">0x32 域名解析服务<a title=\"#0x32-域名解析服务\" href=\"#0x32-域名解析服务\"></a></h3>\n<p>域名解析我用的 cloudflare, 免备案,免费的全球CDN,DNS刷新速度快,域名保护,代码压缩,还有酸爽的开发者模式,还要啥自行车,闭着眼选</p>\n<h3 id=\"0x33-代码仓库的架构\">0x33 代码仓库的架构<a title=\"#0x33-代码仓库的架构\" href=\"#0x33-代码仓库的架构\"></a></h3>\n<p>源码仓库结构是大仓库套小仓库的形式,把博客的仓库和主题的仓库分割开来,把主题仓库放到博客的仓库里面,通过submodule 进行管理,这个嵌套的源码仓库是私有的仓库,同时还会有个公共的仓库,用来放置最后生成的静态文件:</p>\n<p>我解释下为啥要这么做:<br>\n首先源码仓库进行套娃的原因是确保主题仓库的稳定性,毕竟主题不是自己维护的,所以稳定性非常的重要,万一那天我喝多了对主题瞎改一通,或者在代码有大量更新的时候不小心删除了某个非常重要的主题文件,结果在提交代码的时候正好眼瞎没看到更改, 全部提交, 后面排错真的是瞅瞎眼,或者是主题的作者对主题做了重要的更新,也能很容易的进行同步,如果你直接把主题代码纳入到你的源码仓库,而不是分而治之,那你在更新主题的时候还需要去删掉之前所有的主题文件,然后重新添加新的主题文件,那样的话主题就完全不受版本控制了,而且你自己的更改也无法保留,这非常的蛋疼, 所以源码仓库中的博客仓库和主题仓库非常两个仓库是非常有必要的</p>\n<p>同时还有个问题就是我使用github pages部署我的静态站点, github pages可以很方便的绑定自己的域名,但是github pages仅仅支持公共仓库,对于私有的仓库github pages不提供服务, 为了保护我的源码仓库,我把源码仓库搞成私有的,然后使用github actions在我每次提交代码的时候自动执行生成静态站点文件的指令, 然后把生成的静态站点文件自动部署到我设置好的公开仓库当中.</p>\n<p>有人会觉得把主题当作仓库clone到项目当中是不合理的,很多主题都提供了npm包,为啥不直接安装主题包呢,把主题仓库clone到自己的源码仓库岂不是很麻烦,确实在绝大多数情况下主题包可以很好的满足人们的需求,但是一些定制化的需求是需要去更改主题源码的,这个时候主题包就无法完成需求了.</p>\n<h3 id=\"0x34-github绑定多域名的问题\">0x34 github绑定多域名的问题<a title=\"#0x34-github绑定多域名的问题\" href=\"#0x34-github绑定多域名的问题\"></a></h3>\n<p>因为我之前做了一个静态的营销网站<code>quenmaimai.com</code> 这个网站使用的仓库是 <a href=\"http://lipanpan-hub.github.io\">lipanpan-hub.github.io</a> 这个仓库是github pages的专用仓库, 我在这个仓库里面放了cname文件, 把<code>quenmaimai.com</code> 绑定到了我的github,这样一来我所有的新项目仓库 如果开通 github pages 就会被定向到 <code>quenmaimai.com/仓库名称</code> 这个地址, 但是我申请了新的域名 <code>lipanpanx.com</code>, 我希望某个特定的仓库可以和 <code>lipanpanx.com</code> 进行绑定,然后其他的仓库仍旧和 <code>quenmaimai.com</code>进行绑定, 这个操作确实有点骚气了, 我找了网上的各路大神发的帖子,一顿操作猛如虎,然后一看二百五,没一个能用的,最后通过google找到一篇国外老铁发的文章, 他遇到的问题和我相同, 给出的解决方案也很清晰,亲测完美解决我的问题, 方案如下:</p>\n<blockquote>\n<p>在你的域名服务商网站 找到你的域名设置DNS的地方 添加5条DNS解析记录<br>\n“A Record” with host “@” and value “185.199.108.153”<br>\n“A Record” with host “@” and value “185.199.109.153”<br>\n“A Record” with host “@” and value “185.199.110.153”<br>\n“A Record” with host “@” and value “185.199.111.153”<br>\n“CNAME Record” with host “www” and value “<a href=\"http://xn--github-8h6jw94g4v9a.github.io\">github用户名.github.io</a>”</p>\n</blockquote>\n<p>前四条A记录 指向 github, 最后一条cname记录指向 github pages 的专用仓库地址 <code>github用户名.github.io</code><br>\n同时在仓库的GitHub pages设置页面也要进行域名绑定  最后就能成功访问 <a href=\"http://lipanpanx.com\">lipanpanx.com</a> 啦</p>\n<h3 id=\"0x35-github-actions的安全问题\">0x35 github actions的安全问题<a title=\"#0x35-github-actions的安全问题\" href=\"#0x35-github-actions的安全问题\"></a></h3>\n<p>github actions一般是在 github的虚拟机里面执行的(也有在其他地方执行的比如容器,比如自己的主机), 可以执行的操作有非常多, 有时候为了方面我们会用到github官方的一些 actions 或者一些第三方的 actions,无论这些actions本身是否是安全的,一定要确定你使用这些actions的方式是安全的.如果阅读了github actions的官方文档就会发现 GitHub actions的文档几乎在任何地方都会提醒你要确保安全, 因为一些actions会操作仓库,所以会需要你提供 personal token给它, 但是personal token的权限实在是太大, 向我这种私有的源码仓库还好, 有些共有的源码仓库如果你直接把person token 填写到actions里面 就非常的危险, 因为这意味着任何访问到你仓库的人都能拿到你的personal token, 所以可以把把你的personal token搞成变量以变量的形式提供给actions,如下图所示:</p>\n<p><img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/RxnhmDx.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>在途中3号点位处 点击 添加新的 repo secret 就能添加变量了,添加完成变量就能在actions当中访问了<br>\n比如你添加了一个  PERSONAL_TOKEN 的变量, 那么在actions当中你就能通过 $ 去访问</p>\n<h3 id=\"0x36-inside主题代码注入\">0x36 inside主题代码注入<a title=\"#0x36-inside主题代码注入\" href=\"#0x36-inside主题代码注入\"></a></h3>\n<h3 id=\"0x37-主题配置文件\">0x37 主题配置文件<a title=\"#0x37-主题配置文件\" href=\"#0x37-主题配置文件\"></a></h3>\n<h3 id=\"0x37-跪求搜索引擎收录自己的网站\">0x37 跪求搜索引擎收录自己的网站<a title=\"#0x37-跪求搜索引擎收录自己的网站\" href=\"#0x37-跪求搜索引擎收录自己的网站\"></a></h3>\n<p>提交 sitemap的文件的前提是 首先你要有 sitemap文件</p>\n<p>但是如果获得 sitemap文件呢</p>\n<p>提交sitemap的前提是验证网站的所有权</p>\n","prev":{"title":"ShareX截图自动添加水印","link":"post/2021/202102/ShareX截图自动添加水印"},"next":{"title":"波士顿动力狗SPOT购买指北","link":"post/2020/波士顿动力狗SPOT购买指北"},"plink":"http://lipanpanx.com/post/2021/202102/搭建Hexo博客/","toc":[{"id":"0x10-前情提要","title":"0x10 前情提要","index":"1"},{"id":"0x20-博客方案","title":"0x20 博客方案","index":"2"},{"id":"0x30-着手开始搭建","title":"0x30 着手开始搭建","index":"3","children":[{"id":"0x31-域名购买","title":"0x31 域名购买","index":"3.1"},{"id":"0x32-域名解析服务","title":"0x32 域名解析服务","index":"3.2"},{"id":"0x33-代码仓库的架构","title":"0x33 代码仓库的架构","index":"3.3"},{"id":"0x34-github绑定多域名的问题","title":"0x34 github绑定多域名的问题","index":"3.4"},{"id":"0x35-github-actions的安全问题","title":"0x35 github actions的安全问题","index":"3.5"},{"id":"0x36-inside主题代码注入","title":"0x36 inside主题代码注入","index":"3.6"},{"id":"0x37-主题配置文件","title":"0x37 主题配置文件","index":"3.7"},{"id":"0x37-跪求搜索引擎收录自己的网站","title":"0x37 跪求搜索引擎收录自己的网站","index":"3.8"}]}],"reward":true,"copyright":{"author":"李攀攀","link":"<a href=\"http://lipanpanx.com/post/2021/202102/搭建Hexo博客/\" title=\"搭建Hexo博客\">http://lipanpanx.com/post/2021/202102/搭建Hexo博客/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"},"reading_time":"1975 字约 13 分钟"}