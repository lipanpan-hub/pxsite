{"title":"搭建Hexo博客","date":"2021-02-01T17:22:48.000Z","date_formatted":{"ll":"2021年2月1日","L":"2021/02/01","MM-DD":"02-01"},"link":"post/2021/202102/搭建Hexo博客","categories":["其他"],"updated":"2021-11-18T08:03:45.454Z","content":"<p>重新搭个博客, 这里做一下记录</p>\n<span id=\"more\"></span>\n<h2 id=\"0x10-前情提要\">0x10 前情提要<a title=\"#0x10-前情提要\" href=\"#0x10-前情提要\"></a></h2>\n<p>最近决定重新搞个博客,申请个域名,搞的大气一些<br>\n之前的 <a href=\"http://xxx.gitee.com\">xxx.gitee.com</a> 确实有点拿不出手了</p>\n<h2 id=\"0x20-博客方案\">0x20 博客方案<a title=\"#0x20-博客方案\" href=\"#0x20-博客方案\"></a></h2>\n<p>搭建博客 现在有很多的方案,由于是个人博客,平常就是发一些自己写的技术文,访问速度够快就行<br>\n所以就搞成静态博客就行了,但是静态博客也有很多方案可以选择 hexo hugo vuepress 等等<br>\n最终我还是选择了 hexo, hexo是js写的没有hugo(go语言写的)快,但是hexo相对比较成熟,主题的可选择项又多,而且我知道有比较厉害的博客是用hexo+next实现的, 比如<code>cuiqingcai.com</code>, 而且我之前的博客也是基于Hexo搭建的,不想再折腾其他框架了.至于主题,我选择的是一个非常非常非常小众的主题inside,我感觉不错所以就用了,由于是小众主题我已经做好了踩坑的准备了</p>\n<h2 id=\"0x30-着手开始搭建\">0x30 着手开始搭建<a title=\"#0x30-着手开始搭建\" href=\"#0x30-着手开始搭建\"></a></h2>\n<p>既然方案都想好了那就开始搭建</p>\n<h3 id=\"0x31-域名购买\">0x31 域名购买<a title=\"#0x31-域名购买\" href=\"#0x31-域名购买\"></a></h3>\n<p>这个比较简单 阿里云腾讯云都可以买,我在腾讯云上面买下了 <a href=\"http://lipanpanx.com\">lipanpanx.com</a> 年费是61<br>\n直接下单就行了,非常简单,不过如果是第一次买的话, 他会要求你进行实名认证, 你需要填写一个信息模板,然后等待审核,认证成功后才能购买,我的过往经验告诉我在腾讯云买域名要比在阿里云买更快,但是腾讯云的域名数据库貌似要比阿里云更新的慢,有些域名在阿里能搜到在腾讯搜不到</p>\n<h3 id=\"0x32-域名解析服务\">0x32 域名解析服务<a title=\"#0x32-域名解析服务\" href=\"#0x32-域名解析服务\"></a></h3>\n<p>域名解析我用的 cloudflare, 免备案,免费的全球CDN,DNS刷新速度快,域名保护,代码压缩,还有酸爽的开发者模式,还要啥自行车,闭着眼选</p>\n<h3 id=\"0x33-代码仓库的架构\">0x33 代码仓库的架构<a title=\"#0x33-代码仓库的架构\" href=\"#0x33-代码仓库的架构\"></a></h3>\n<p>源码仓库结构是大仓库套小仓库的形式,把博客的仓库和主题的仓库分割开来,把主题仓库放到博客的仓库里面,通过submodule 进行管理,这个嵌套的源码仓库是私有的仓库,同时还会有个公共的仓库,用来放置最后生成的静态文件:</p>\n<p>我解释下为啥要这么做:<br>\n首先源码仓库进行套娃的原因是确保主题仓库的稳定性,毕竟主题不是自己维护的,所以稳定性非常的重要,万一那天我喝多了对主题瞎改一通,或者在代码有大量更新的时候不小心删除了某个非常重要的主题文件,结果在提交代码的时候正好眼瞎没看到更改, 全部提交, 后面排错真的是瞅瞎眼,或者是主题的作者对主题做了重要的更新,也能很容易的进行同步,如果你直接把主题代码纳入到你的源码仓库,而不是分而治之,那你在更新主题的时候还需要去删掉之前所有的主题文件,然后重新添加新的主题文件,那样的话主题就完全不受版本控制了,而且你自己的更改也无法保留,这非常的蛋疼, 所以源码仓库中的博客仓库和主题仓库非常两个仓库是非常有必要的</p>\n<p>同时还有个问题就是我使用github pages部署我的静态站点, github pages可以很方便的绑定自己的域名,但是github pages仅仅支持公共仓库,对于私有的仓库github pages不提供服务, 为了保护我的源码仓库,我把源码仓库搞成私有的,然后使用github actions在我每次提交代码的时候自动执行生成静态站点文件的指令, 然后把生成的静态站点文件自动部署到我设置好的公开仓库当中.</p>\n<p>有人会觉得把主题当作仓库clone到项目当中是不合理的,很多主题都提供了npm包,为啥不直接安装主题包呢,把主题仓库clone到自己的源码仓库岂不是很麻烦,确实在绝大多数情况下主题包可以很好的满足人们的需求,但是一些定制化的需求是需要去更改主题源码的,这个时候主题包就无法完成需求了.</p>\n<h3 id=\"0x34-github绑定多域名的问题\">0x34 github绑定多域名的问题<a title=\"#0x34-github绑定多域名的问题\" href=\"#0x34-github绑定多域名的问题\"></a></h3>\n<p>因为我之前做了一个静态的营销网站<code>quenmaimai.com</code> 这个网站使用的仓库是 <a href=\"http://lipanpan-hub.github.io\">lipanpan-hub.github.io</a> 这个仓库是github pages的专用仓库, 我在这个仓库里面放了cname文件, 把<code>quenmaimai.com</code> 绑定到了我的github,这样一来我所有的新项目仓库 如果开通 github pages 就会被定向到 <code>quenmaimai.com/仓库名称</code> 这个地址, 但是我申请了新的域名 <code>lipanpanx.com</code>, 我希望某个特定的仓库可以和 <code>lipanpanx.com</code> 进行绑定,然后其他的仓库仍旧和 <code>quenmaimai.com</code>进行绑定, 这个操作确实有点骚气了, 我找了网上的各路大神发的帖子,一顿操作猛如虎,然后一看二百五,没一个能用的,最后通过google找到一篇国外老铁发的文章, 他遇到的问题和我相同, 给出的解决方案也很清晰,亲测完美解决我的问题, 方案如下:</p>\n<blockquote>\n<p>在你的域名服务商网站 找到你的域名设置DNS的地方 添加5条DNS解析记录<br>\n“A Record” with host “@” and value “185.199.108.153”<br>\n“A Record” with host “@” and value “185.199.109.153”<br>\n“A Record” with host “@” and value “185.199.110.153”<br>\n“A Record” with host “@” and value “185.199.111.153”<br>\n“CNAME Record” with host “www” and value “<a href=\"http://githubUsername.github.io\">githubUsername.github.io</a>”</p>\n</blockquote>\n<p>前四条A记录 指向 github的IP地址, 最后一条cname记录指向 github pages 的专用仓库地址 <code>github用户名.github.io</code><br>\n同时在仓库的GitHub pages设置页面也要进行域名绑定  最后就能成功访问 <a href=\"http://lipanpanx.com\">lipanpanx.com</a> 啦</p>\n<h3 id=\"0x35-github-actions的安全问题\">0x35 github actions的安全问题<a title=\"#0x35-github-actions的安全问题\" href=\"#0x35-github-actions的安全问题\"></a></h3>\n<p>github actions一般是在 github的虚拟机里面执行的(也有在其他地方执行的比如容器,比如自己的主机), 可以执行的操作有非常多, 有时候为了方面我们会用到github官方的一些 actions 或者一些第三方的 actions,无论这些actions本身是否是安全的,一定要确定你使用这些actions的方式是安全的.如果阅读了github actions的官方文档就会发现 GitHub actions的文档几乎在任何地方都会提醒你要确保安全, 因为一些actions会操作仓库,所以会需要你提供 personal token给它, 但是personal token的权限实在是太大, 向我这种私有的源码仓库还好, 有些共有的源码仓库如果你直接把person token 填写到actions里面 就非常的危险, 因为这意味着任何访问到你仓库的人都能拿到你的personal token, 所以可以把把你的personal token搞成变量以变量的形式提供给actions,如下图所示:</p>\n<p><img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/RxnhmDx.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>在途中3号点位处 点击 添加新的 repo secret 就能添加变量了,添加完成变量就能在actions当中访问了<br>\n比如你添加了一个  PERSONAL_TOKEN 的变量, 那么在actions当中你就能通过<code>$&#123;&#123;secrets.PERSONAL_TOKEN&#125;&#125;</code>去访问</p>\n<h3 id=\"0x37-主题配置文件\">0x37 主题配置文件<a title=\"#0x37-主题配置文件\" href=\"#0x37-主题配置文件\"></a></h3>\n<p>hexo项目当中 对主题进行配置主要使用下面的几种方式:</p>\n<ol>\n<li>直接在网站的配置文件(网站根目录的config.json)当中的 theme_config下面添加主题配置</li>\n<li>在网站根目录中添加 _config.[theme].yml 对主题进行配置</li>\n<li>在/source/_data/[theme].yml 当中进行配置</li>\n<li>在 themes/theme 文件夹下面的 主题源码当中找到 config.yml 进行配置</li>\n</ol>\n<p>上面的几种方法各有利弊吧, 但是最终我选择了第二种方法 在网站的根目录下面创建了一个 _config.inside.yml 文件配置主题</p>\n<h4 id=\"我简单说下不选择其他几种方法的原因:\">我简单说下不选择其他几种方法的原因:<a title=\"#我简单说下不选择其他几种方法的原因:\" href=\"#我简单说下不选择其他几种方法的原因:\"></a></h4>\n<ul>\n<li>首先是第一种方法 网站的配置和主题的配置放在 一起, 首先会导致这个配置文件内容过长, 读取速度缓慢,而且文件内容过长的时候可读性就会变差, 你找个配置可能要找半天, 还有就是两个既然都放在一起了 只能一起做版本管理 无法单独做版本管理  这就有点蛋疼了</li>\n<li>然后就是第三种方法, 这种古老的方法 几乎已经被抛弃, 主题的配置文件放到 网站的内容目录里面 感觉怪怪的 现如今已经很少人用了</li>\n<li>最后 就是第四种方法, 这种方法就是相当于去修改主题的源码, 对于一般人来说动源码风险还是比较大的 万一改错了 又不知道怎么改回来 那就相当蛋疼,只能重新clone仓库</li>\n</ul>\n<h4 id=\"然后我说一下选择第二种方法的原因:\">然后我说一下选择第二种方法的原因:<a title=\"#然后我说一下选择第二种方法的原因:\" href=\"#然后我说一下选择第二种方法的原因:\"></a></h4>\n<p>首先 在网站的根目录下面创建新的 _config.[theme].yml 能够很好的把网站配置和主题配置分割开来, 两个配置文件单独的做版本控制,单独做版本控制是比较重要的 如果出现问题就比较容易进行方便的代码回滚,就容易排错, 然后还有最妙的一点 就是在Hexo5中上面的 方法1和方法2 和方法4 中的配置文件是同时生效的, 其中方法1的优先级最高, 方法2的优先级居中, 最后是方法4, 如果我们采用第二种配置方法 首先能够确保 themes/theme文件夹下面有个最基本的准确配置(这个配置是主题的作者写的默认配置),然后我们在上层怎么配置都行 大不了配置错了改改就行了 反正有最可靠的基本配置在 怎么改_config.[theme].yml都不怕.关于多处主题配置是如何协同工作的 hexo 官方文档中有比较详细的说明:<a href=\"https://hexo.io/docs/configuration#Alternate-Theme-Config\" target=\"_blank\">点击此处查看</a></p>\n<h3 id=\"0x36-inside主题代码注入\">0x36 Inside主题代码注入<a title=\"#0x36-inside主题代码注入\" href=\"#0x36-inside主题代码注入\"></a></h3>\n<p>主题的能力是有限的, 别人花精力写的东西我们直接拿过来白嫖那就肯定不能做到十全十美满足你的所有需求, 这个时候就需要代码注入来满足你的需求.</p>\n<is-cipher placeholder=\"\">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</is-cipher><p>当然如果你使用的是Hexo版本&gt;=5的话 你还可以使用hexo的代码注入API方便的注入代码, 直接在网站的根目录下面创建一个scripts文件夹 这个文件夹中的js会自动运行 你只需要在文件夹当中创建js文件然后再js文件当中运行 hexo注入代码的API就可以了,由于inside注入代码的方式已经比较爽了,对于hexo提供的代码注入方式我这里就不再赘述</p>\n<h2 id=\"0x40-seo\">0x40 SEO<a title=\"#0x40-seo\" href=\"#0x40-seo\"></a></h2>\n<p>很多大佬的个人网站 之所以搞成静态的 其实根本原因就是搜索引擎对静态的站点比较友好,这类站点容易做SEO,设置keyword description 之类的东西, 在hexo的配置文件当中可以进行配置我就不多说了, 这里我主要讲一下 如何去向搜索引擎提交网站的sitemap文件,以及加快搜索引擎索引站点的方法.</p>\n<p>向搜索引擎提交 sitemap的文件的前提是 首先你要有sitemap文件, 那么sitemap文件哪里来呢? 其实可以使用hexo的插件去生成这个sitemap文件,具体步骤如下:</p>\n<ol>\n<li>安装相关的插件 <code>npm install hexo-generator-sitemap --save</code></li>\n<li>然后可以在 hexo的配置文件当中 添加下面的配置</li>\n</ol>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sitemap:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">sitemap.xml</span>  <span class=\"string\">//</span> <span class=\"string\">生成的sitemap文件存放的位置</span></span><br><span class=\"line\">  <span class=\"attr\">template:</span> <span class=\"string\">./sitemap_template.xml</span>  <span class=\"string\">//生成sitemap文件所使用的模板所使用的位置</span></span><br><span class=\"line\">  <span class=\"attr\">rel:</span> <span class=\"literal\">false</span>  <span class=\"string\">//</span> <span class=\"string\">是否将</span> <span class=\"string\">rel-sitemap</span> <span class=\"string\">添加到网站的</span> <span class=\"string\">header当中</span></span><br><span class=\"line\">  <span class=\"attr\">tags:</span> <span class=\"literal\">true</span> <span class=\"string\">//</span> <span class=\"string\">是否将tag页面放到sitemap当中</span></span><br><span class=\"line\">  <span class=\"attr\">categories:</span> <span class=\"literal\">true</span>  <span class=\"string\">//是否将categories</span> <span class=\"string\">页面放到sitemap当中</span></span><br></pre></td></tr></table></figure>\n<p>模板我们可以使用插件的默认模板就行了 把默认模板复制下来 保存到网站根目录当中保存成为 sitemap_template.xml就行了<br>\n<a href=\"https://github.com/hexojs/hexo-generator-sitemap/blob/master/sitemap.xml\" target=\"_blank\">默认模板地址</a><br>\n3. 最后执行 <code>hexo g</code> 的时候就能在public 目录下面生成 sitemap.xml了, 这个就是我们需要提交给搜索引擎的重要文件</p>\n<p>由于sitemap文件就存放在网站的根目录下面 所以地址是确定的,我们只要把这个文件的地址提交给搜索引擎,搜索引擎就会每隔一段时间来抓取我们的sitemap文件,来看看网站是否更新了新的内容了</p>\n<p>那么我们如何提交sitemap文件呢?<br>\n提交sitemap文件的一个重要前提 就是验证网站的所有权, 验证网站所有权的方法有很多中,常见为下面几种:</p>\n<ul>\n<li>使用DNS的解析记录进行验证(最为简单方便)</li>\n<li>使用HTML的 Meta标记进行验证</li>\n<li>使用一个特殊的验证文件放在网站的某个目录进行验证</li>\n</ul>\n<p>下面我讲一下 针对于google bing 和baidu 我是如何快速的验证网站的所有权:</p>\n<ul>\n<li>google网站所有权验证方式最为简单, 只需要在域名管理处添加 一条TXT的DNS解析记录就行了</li>\n<li>bing的网站所有权验证方式 也可以通过添加DNS解析记录的方式来完成不过bing需要添加的是CNAME的记录</li>\n<li>baidu的网站所有权验证方式 同样可以使用添加DNS解析记录的方式  和bing一样添加CNAME记录即可</li>\n</ul>\n<p>Google网站所有权验证和提交Sitemap的地址: <a href=\"https://search.google.com/search-console/about\" target=\"_blank\">点击地处打开</a><br>\nBing网站所有权验证和提交Sitemap的地址: <a href=\"https://www.bing.com/webmasters\" target=\"_blank\">点击地处打开</a><br>\nBaidu网站所有权验证和提交Sitemap的地址: <a href=\"https://ziyuan.baidu.com/site/\" target=\"_blank\">点击地处打开</a></p>\n<p>提交完成sitemap之后 搜索引擎的爬虫 就会定期的去爬取你的站点的sitemap文件,来确保更新对你网站的收录,这个过程bing是最快的,其次是google,最后是baidu, 这种方式确实很安逸 等着被收录就行了, 就是效率实在太低了, 就算是最快的bing当你的网站更新了之后,它也需要几天的时间才会过来爬取你的站点,因为现在互联网上面的各种 乱七八遭的网站实在是太多了, 各大搜索引擎的爬虫实在是太忙了,一个新站点的权重实在是太小了,他们爬取和更新其他重要的网站时间还不够呢, 谁没事天天到你八百年不更新一篇的小博客来转悠啊,人家的时间成本是很高的,所以我们要变被动为主动, 主动的向搜索引擎提交我们更新的文章的连接,那我们要怎么做呢?</p>\n<p>主动更新搜索引擎收录的方式有两种:</p>\n<ol>\n<li>手动向搜索引擎提交连接</li>\n<li>使用搜索引擎提供的API去提交连接</li>\n</ol>\n<p>手动提交链接的方式实际上是比较适合更新周期比较长的个人博客的, 但是最为中华人民共和国的新时代青年,我不可能采用这样的方式(主要是太懒的🤣),所以我果断选择使用搜索引擎API去提交链接, 当然网上有现成的轮子可以用,也是我做此选择的主要原因:</p>\n<ol>\n<li>先安装插件 <code>npm install --save hexo-submit-urls-to-search-engine</code></li>\n<li>然后 在hexo的配置文件当中添加下面的配置:</li>\n</ol>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">hexo_submit_urls_to_search_engine:</span></span><br><span class=\"line\">  <span class=\"attr\">submit_condition:</span> <span class=\"string\">count</span> <span class=\"comment\">#链接被提交的条件，可选值：count | period 现仅支持count</span></span><br><span class=\"line\">  <span class=\"attr\">count:</span> <span class=\"number\">10</span> <span class=\"comment\"># 提交最新的10个链接</span></span><br><span class=\"line\">  <span class=\"attr\">period:</span> <span class=\"number\">900</span> <span class=\"comment\"># 提交修改时间在 900 秒内的链接</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">google:</span> <span class=\"number\">0</span> <span class=\"comment\"># 是否向Google提交,可选值:(0:否,1:是)&#123;google提交链接的API操作比较麻烦,我这里就屏蔽了向google提交链接&#125;</span></span><br><span class=\"line\">  <span class=\"attr\">bing:</span> <span class=\"number\">1</span> <span class=\"comment\"># 是否向bing提交,可选值:(0:否,1:是)</span></span><br><span class=\"line\">  <span class=\"attr\">baidu:</span> <span class=\"number\">1</span> <span class=\"comment\"># 是否向baidu提交,可选值:(0:否,1:是)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"attr\">txt_path:</span> <span class=\"string\">submit_urls.txt</span> <span class=\"comment\">## 文本文档名， 需要推送的链接会保存在此文本文档里</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"attr\">baidu_host:</span> <span class=\"string\">https://lipanpanx.com</span> <span class=\"comment\">## 在百度站长平台中注册的域名</span></span><br><span class=\"line\">  <span class=\"attr\">baidu_token:</span> <span class=\"string\">xxxxxx</span> <span class=\"comment\">## 请注意这是您向baidu提交网站链接的API的秘钥， 所以请不要把它直接发布在公众仓库里!</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">bing_host:</span> <span class=\"string\">https://lipanpanx.com</span> <span class=\"comment\">## 在bing站长平台中注册的域名</span></span><br><span class=\"line\">  <span class=\"attr\">bing_token:</span> <span class=\"string\">xxxxxx</span> <span class=\"comment\">## 请注意这是您向bing提交网站链接的API的秘钥,所以请不要把它直接发布在公众仓库里!</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">google_host:</span> <span class=\"string\">https://lipanpanx.com</span> <span class=\"comment\">## 在google站长平台中注册的域名</span></span><br><span class=\"line\">  <span class=\"attr\">google_key_file:</span> <span class=\"string\">Project.json</span> <span class=\"comment\">#存放google key的json文件，放于网站根目录（与hexo _config.yml文件位置相同），请不要把json文件内容直接发布在公众仓库里!</span></span><br><span class=\"line\">  <span class=\"attr\">google_proxy:</span> <span class=\"number\">0</span> <span class=\"comment\"># 向谷歌提交网址所使用的系统 http 代理，填 0 不使用</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>然后再hexo配置文件的deploy字段下面添加下面三条内容:</li>\n</ol>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">cjh_google_url_submitter</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">cjh_bing_url_submitter</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">cjh_baidu_url_submitter</span></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>然后执行 <code>hexo g &amp;&amp; hexo d</code> 就能够调用相应的API去向搜索引擎提交你的网页链接给搜索引擎收录了</li>\n</ol>\n","prev":{"title":"ShareX截图自动添加水印","link":"post/2021/202102/ShareX截图自动添加水印"},"next":{"title":"波士顿动力狗SPOT购买指北","link":"post/2020/波士顿动力狗SPOT购买指北"},"plink":"http://lipanpanx.com/post/2021/202102/搭建Hexo博客/","toc":[{"id":"0x10-前情提要","title":"0x10 前情提要","index":"1"},{"id":"0x20-博客方案","title":"0x20 博客方案","index":"2"},{"id":"0x30-着手开始搭建","title":"0x30 着手开始搭建","index":"3","children":[{"id":"0x31-域名购买","title":"0x31 域名购买","index":"3.1"},{"id":"0x32-域名解析服务","title":"0x32 域名解析服务","index":"3.2"},{"id":"0x33-代码仓库的架构","title":"0x33 代码仓库的架构","index":"3.3"},{"id":"0x34-github绑定多域名的问题","title":"0x34 github绑定多域名的问题","index":"3.4"},{"id":"0x35-github-actions的安全问题","title":"0x35 github actions的安全问题","index":"3.5"},{"id":"0x37-主题配置文件","title":"0x37 主题配置文件","index":"3.6"},{"id":"0x36-inside主题代码注入","title":"0x36 Inside主题代码注入","index":"3.7"}]},{"id":"0x40-seo","title":"0x40 SEO","index":"4"}],"reward":true,"copyright":{"author":"李攀攀","link":"<a href=\"http://lipanpanx.com/post/2021/202102/搭建Hexo博客/\" title=\"搭建Hexo博客\">http://lipanpanx.com/post/2021/202102/搭建Hexo博客/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"},"reading_time":"4816 字约 32 分钟"}