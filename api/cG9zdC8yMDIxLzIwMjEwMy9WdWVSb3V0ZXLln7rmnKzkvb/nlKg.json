{"title":"VueRouter基本使用","date":"2021-03-05T18:35:48.000Z","date_formatted":{"ll":"2021年3月5日","L":"2021/03/05","MM-DD":"03-05"},"link":"post/2021/202103/VueRouter基本使用","updated":"2021-12-13T02:12:47.634Z","content":"<h2 id=\"vuerouter基本使用步骤\">VueRouter基本使用步骤<a title=\"#vuerouter基本使用步骤\" href=\"#vuerouter基本使用步骤\"></a></h2>\n<ol>\n<li>导入Vue Router (VueRoute.js的导入语句要放在Vue.js导入语句的下面)</li>\n<li>写好需要被路由的组件 并且成功注册组件</li>\n<li>使用<code>new VueRouter(&#123;&#125;)</code>创建路由对象的实例,并且在路由对象的routes选项当中添加路由规则</li>\n<li>将路由对象挂载到Vue实例中</li>\n<li><code>&lt;router-view&gt;&lt;router-view&gt;</code>在页面当中占坑,被路径匹配到的组件会被渲染到这个坑位当中.</li>\n<li><code>&lt;router-link&gt;&lt;/router-link&gt;</code>会被渲染成为导航链接, 导航到指定组件.</li>\n</ol>\n<h2 id=\"vuerouter的下载和引入\">VueRouter的下载和引入<a title=\"#vuerouter的下载和引入\" href=\"#vuerouter的下载和引入\"></a></h2>\n<p><a href=\"https://github.com/vuejs/vue-router\" target=\"_blank\">VueRouter 3.x github仓库地址</a><br>\n<a href=\"https://github.com/vuejs/vue-router-next\" target=\"_blank\">VueRouter 4.x github仓库地址</a><br>\n<a href=\"https://router.vuejs.org/installation.html\" target=\"_blank\">VueRouter 3.x 英文文档</a><br>\n<a href=\"https://next.router.vuejs.org/introduction.html\" target=\"_blank\">VueRouter 4.x 英文文档</a><br>\n<a href=\"https://router.vuejs.org/zh/installation.html\" target=\"_blank\">VueRouter 3.x 中文文档</a><br>\n<a href=\"https://next.router.vuejs.org/zh/introduction.html\" target=\"_blank\">VueRouter 4.x 中文文档</a></p>\n<p>在项目当中使用VueRouter的方式有很多种,我讲一下最简单的一种:<br>\n到github仓库的release页面下载相应的版本然后找到dist目录找到对应的源文件复制到自己的工作目录然后在自己的项目当中引用即可,需要注意的是在引入 <code>vue-router.js</code>之前需要先引入 <code>vue.js</code></p>\n<h2 id=\"组件准备\">组件准备<a title=\"#组件准备\" href=\"#组件准备\"></a></h2>\n<p>在创建VueRouter实例之前需要创建好需要的组件,如果在创建VurRouter实例之后创建组件会导致创建VueRouter实例的时候无法找到路由规则相关的组件而报错,如果是局部组件还需要在对应的Vue实例当中注册组件.</p>\n<h2 id=\"vuerouter实例的创建\">VueRouter实例的创建<a title=\"#vuerouter实例的创建\" href=\"#vuerouter实例的创建\"></a></h2>\n<p>我写了一个快速创建VueRouter实例的vscode snippet:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;newVueRouter&quot;</span><span class=\"string\">:&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;prefix&quot;:</span> <span class=\"string\">&quot;newVueRouter&quot;</span><span class=\"string\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;body&quot;:</span> [</span><br><span class=\"line\">        <span class=\"string\">&quot;const router = new VueRouter(&#123;&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    routes:[&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;        $0&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    ],&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;    linkActiveClass:&#x27;actived-link&#x27;,&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;&#125;);&quot;</span>,</span><br><span class=\"line\">    ]<span class=\"string\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;scope&quot;:</span> <span class=\"string\">&quot;javascript&quot;</span><span class=\"string\">,</span></span><br><span class=\"line\"><span class=\"string\">&#125;,</span></span><br></pre></td></tr></table></figure>\n<p>这个snippet 不仅仅可以快速的创建VueRouter实例 并且已经指定好了默认的linkActiveClass的名字, 这个所谓的linkActiveClass就是当组件被选中的时候这个组件上会被添加一个类名, 我们可以通过这个类名控制当前被选中组件的的一些样式之类的. 然后你还可以在创建完成 VueRouter实例之后直接在 routes 当中填写路由规则,简直不要太方便.</p>\n<h2 id=\"&lt;router-view&gt;和&lt;router-link&gt;\"><code>&lt;router-view&gt;</code>和<code>&lt;router-link&gt;</code><a title=\"#&lt;router-view&gt;和&lt;router-link&gt;\" href=\"#&lt;router-view&gt;和&lt;router-link&gt;\"></a></h2>\n<p><code>&lt;router-view&gt;</code> 也是一个组件 这个组件被用来渲染成为路径匹配到的组件.</p>\n<p>比如路径 <code>http://127.0.0.1:5500/5565_test/5576_VueRouter.html#/User/44</code> 如果你在VueRouter的路由规则当中添加了一套匹配User的规则 <code>&#123;path: '/User/:id', component: User,&#125;</code> 那么这条路径就会被匹配, User组件就会被渲染到页面的指定位置, 这个位置是由<code>&lt;router-view&gt;</code>决定, 这个东西和插槽非常的像.</p>\n<p>就像插槽有匿名插槽和具名插槽之分 <code>&lt;router-view&gt;</code> 也分有名字和无名子的<code>&lt;router-view&gt;</code>, 名字通过name属性去定义<code>&lt;router-view name='xxx'&gt;&lt;/router-view&gt;</code>同时 name属性也是 <code>&lt;router-view&gt;</code>组件唯一的自带属性. 通过为<code>&lt;router-view&gt;</code>添加name属性我们就可以在网页中添加名字各异的多个<code>&lt;router-view&gt;</code>了,然后配合路由规则就可以把不同名字的<code>&lt;router-view&gt;</code>渲染成为不同的组件.</p>\n<p><code>&lt;router-view&gt;</code> 还有个比较棒的特性就是嵌套, 当我们把页面当中的某个<code>&lt;router-view&gt;</code>渲染成某个组件之后,这个组件当中仍然可以存在新的<code>&lt;router-view&gt;</code>,这个新的<code>&lt;router-view&gt;</code>可以渲染为当前组件的子组件.</p>\n<hr>\n<p>我们可以直接把组件写在页面当中,也可以用<code>&lt;router-view&gt;</code>显示组件,然后通过路径地址导航到我们的组件, 我们可以直接在浏览器的网址栏当中输入这个地址,我们也可以网页当中添加链接或者按钮导航到这个地址, 这个时候就需要使用 <code>&lt;router-link&gt;</code>了. <a href=\"https://router.vuejs.org/zh/api/#router-view\" target=\"_blank\"><router-view>相关文档</a></p>\n<p><code>&lt;router-link&gt;</code> 同样是一个组件, 这个组件在页面当中导航用的,通过 to 属性指定目标地址,在页面当中默认渲染成带有正确链接的 <code>&lt;a&gt;</code> 标签. <code>&lt;router-link&gt;</code> 除了to属性之外还有很多的属性可以设置:<a href=\"https://router.vuejs.org/zh/api/#router-link-props\" target=\"_blank\">相关文档地址</a></p>\n<p><code>&lt;router-link&gt;</code>的首要任务当然是导航, 但是在导航的时候它也可以提供query参数和 params参数</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/one?name=lnj&amp;age=33&quot;</span> <span class=\"attr\">tag</span>=<span class=\"string\">&quot;button&quot;</span>&gt;</span>导航到路径/one <span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">&quot;/two/zs/66&quot;</span> <span class=\"attr\">tag</span>=<span class=\"string\">&quot;button&quot;</span>&gt;</span>导航到路径/two/zs/66 <span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>路径当中提供的参数 会被存储到$route当中 我们可以在被匹配到的组件内通过  拿到相关的数据. <a href=\"https://router.vuejs.org/zh/api/#%E8%B7%AF%E7%94%B1%E5%AF%B9%E8%B1%A1\" target=\"_blank\">更多关于$route的文档</a></p>\n<hr>\n<h2 id=\"添加各种形式的组件路由规则\">添加各种形式的组件路由规则<a title=\"#添加各种形式的组件路由规则\" href=\"#添加各种形式的组件路由规则\"></a></h2>\n<p><code>&lt;router-view&gt;</code> 可以被渲染成为组件,<code>&lt;router-link&gt;</code>可以被渲染成为链接导航到指定的组件, 而VueRouter的路由规则就是这二者之间的桥梁, 路由规则规定了什么样的链接导航到什么样的组件.<br>\n在我们创建VueRouter实例的时候,有很多可选的构建选项:<a href=\"https://router.vuejs.org/zh/api/#router-%E6%9E%84%E5%BB%BA%E9%80%89%E9%A1%B9\" target=\"_blank\">见文档</a>,而这些构建选项当中的routes选项就是我们指定路由规则的地方, routes选项的值是一个数组,这个数组当中存放着 <code>&lt;RouteConfig&gt;</code>类型的路由规则.<br>\n<code>&lt;RouteConfig&gt;</code>的类型定义如下:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface RouteConfig = &#123;</span><br><span class=\"line\">  <span class=\"attr\">path</span>: string,     <span class=\"comment\">//相对路径</span></span><br><span class=\"line\">  component?: Component,    <span class=\"comment\">//和路径对应的组件</span></span><br><span class=\"line\">  name?: string,    <span class=\"comment\">// 命名路由</span></span><br><span class=\"line\">  components?: &#123; [name: string]: Component &#125;, <span class=\"comment\">// 命名视图组件</span></span><br><span class=\"line\">  redirect?: string | Location | <span class=\"built_in\">Function</span>,  <span class=\"comment\">//重定向路由</span></span><br><span class=\"line\">  props?: boolean | <span class=\"built_in\">Object</span> | <span class=\"built_in\">Function</span>,      <span class=\"comment\">//解耦</span></span><br><span class=\"line\">  alias?: string | <span class=\"built_in\">Array</span>&lt;string&gt;,           <span class=\"comment\">//路由别名</span></span><br><span class=\"line\">  children?: <span class=\"built_in\">Array</span>&lt;RouteConfig&gt;,            <span class=\"comment\">//嵌套路由</span></span><br><span class=\"line\">  beforeEnter?: <span class=\"function\">(<span class=\"params\">to: Route, <span class=\"keyword\">from</span>: Route, next: <span class=\"built_in\">Function</span></span>) =&gt;</span> <span class=\"keyword\">void</span>,</span><br><span class=\"line\">  meta?: any,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2.6.0+</span></span><br><span class=\"line\">  caseSensitive?: boolean, <span class=\"comment\">// 匹配规则是否大小写敏感？(默认值：false)</span></span><br><span class=\"line\">  pathToRegexpOptions?: <span class=\"built_in\">Object</span> <span class=\"comment\">// 编译正则的选项</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>对于各种形式的路由为了方便理解 下面有一些简单的例子:</p>\n<h3 id=\"一般路由\">一般路由<a title=\"#一般路由\" href=\"#一般路由\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> VueRouter(&#123;</span><br><span class=\"line\">    <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">        &#123;<span class=\"attr\">path</span>:<span class=\"string\">&#x27;/one&#x27;</span>,<span class=\"attr\">component</span>:one,&#125;,</span><br><span class=\"line\">        &#123;<span class=\"attr\">path</span>:<span class=\"string\">&#x27;/two&#x27;</span>,<span class=\"attr\">component</span>:two,&#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 只需要填写路径和对应的组件,访问路径就能显示对应的组件</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"动态路由\">动态路由<a title=\"#动态路由\" href=\"#动态路由\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> VueRouter(&#123;</span><br><span class=\"line\">    <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">        &#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/User/:id&#x27;</span>, <span class=\"attr\">component</span>: User, &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 通过动态路径参数, 可以允许不同的用户都能够匹配到 /User/:id 然后都使用User组件 </span></span><br></pre></td></tr></table></figure>\n<h3 id=\"命名路由\">命名路由<a title=\"#命名路由\" href=\"#命名路由\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> VueRouter(&#123;</span><br><span class=\"line\">  <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">    &#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/user/:userId&#x27;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&#x27;user&#x27;</span>, <span class=\"attr\">component</span>: User &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 通过 name字段可以为路由添加名字 然后我们可以通过这个名字来使用这个路由</span></span><br><span class=\"line\">    <span class=\"comment\">// &lt;router-link :to=&quot;&#123; name: &#x27;user&#x27;, params: &#123; userId: 123 &#125;&#125;&quot;&gt;User&lt;/router-link&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">// 上面这个 &lt;router-link&gt; 默认情况下会被渲染成为&lt;a&gt; 链接 指向  /user/123   </span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"重定向路由\">重定向路由<a title=\"#重定向路由\" href=\"#重定向路由\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> VueRouter(&#123;</span><br><span class=\"line\">    <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">      &#123;<span class=\"attr\">path</span>:<span class=\"string\">&#x27;/&#x27;</span>,<span class=\"attr\">redirect</span>:<span class=\"string\">&#x27;/one&#x27;</span>&#125;  <span class=\"comment\">// 访问根地址 的时候URL重定向到 /one 然后显示one组件 </span></span><br><span class=\"line\">      &#123;<span class=\"attr\">path</span>:<span class=\"string\">&#x27;/one&#x27;</span>,<span class=\"attr\">component</span>:one,&#125;,</span><br><span class=\"line\">      &#123;<span class=\"attr\">path</span>:<span class=\"string\">&#x27;/two&#x27;</span>,<span class=\"attr\">component</span>:two,&#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> VueRouter(&#123;</span><br><span class=\"line\">  <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">    &#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/foo&#x27;</span>,<span class=\"attr\">name</span>:<span class=\"string\">&#x27;foo&#x27;</span>,<span class=\"attr\">component</span>:foo&#125;</span><br><span class=\"line\">    &#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/a&#x27;</span>, <span class=\"attr\">redirect</span>: &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;foo&#x27;</span> &#125;&#125; </span><br><span class=\"line\">    <span class=\"comment\">// 重定向的目标也可以是一个命名的路由, </span></span><br><span class=\"line\">    <span class=\"comment\">// 当你访问/a的时候  URL会被重定向到/foo 然后显示foo组件</span></span><br><span class=\"line\">    <span class=\"comment\">// 当你访问/foo的时候 正常显示 </span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> VueRouter(&#123;</span><br><span class=\"line\">  <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">    &#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/a&#x27;</span>, <span class=\"attr\">redirect</span>: <span class=\"function\"><span class=\"params\">to</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 方法接收 目标路由 作为参数</span></span><br><span class=\"line\">      <span class=\"comment\">// return 重定向的 字符串路径/路径对象</span></span><br><span class=\"line\">    &#125;&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"路由别名\">路由别名<a title=\"#路由别名\" href=\"#路由别名\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> VueRouter(&#123;</span><br><span class=\"line\">  <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">    &#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/a&#x27;</span>, <span class=\"attr\">component</span>: A, <span class=\"attr\">alias</span>: <span class=\"string\">&#x27;/b&#x27;</span> &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 为路径/a 创建别名 /b, </span></span><br><span class=\"line\">    <span class=\"comment\">// 就是说当你访问/a的时候 正常显示</span></span><br><span class=\"line\">    <span class=\"comment\">// 当你访问/b的时候 URL会保持不变 但是路由会匹配到 /a相关的路由</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 重定向的时候URL发生改变然后按照新URL匹配路由  路由别名URL不会发生变化按照相关联的别名匹配路由  </span></span><br></pre></td></tr></table></figure>\n<h3 id=\"嵌套路由\">嵌套路由<a title=\"#嵌套路由\" href=\"#嵌套路由\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> VueRouter(&#123;</span><br><span class=\"line\">    <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/User/:id&#x27;</span>, <span class=\"attr\">component</span>: User,</span><br><span class=\"line\">        <span class=\"comment\">// 访问 /User/:id 显示User组件 并且User组件当中会显示它的子组件 </span></span><br><span class=\"line\">        <span class=\"attr\">children</span>: [</span><br><span class=\"line\">          <span class=\"comment\">// 访问 /User/:id/UserProfile 会在User组件当中 显示User的子组件 UserProfile </span></span><br><span class=\"line\">          &#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;UserProfile&#x27;</span>, <span class=\"attr\">component</span>: User.components.UserProfile, &#125;,</span><br><span class=\"line\">          &#123; <span class=\"attr\">path</span>: <span class=\"string\">&#x27;UserPosts&#x27;</span>, <span class=\"attr\">component</span>: User.components.UserPosts, &#125;,</span><br><span class=\"line\">          <span class=\"comment\">// 访问 /User/:id/UserPosts 会在User组件当中显示 User的子组件UserPosts</span></span><br><span class=\"line\">        ],</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"命名视图相关的路由\">命名视图相关的路由<a title=\"#命名视图相关的路由\" href=\"#命名视图相关的路由\"></a></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> VueRouter(&#123;</span><br><span class=\"line\">    <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/xxx&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">default</span>: test,</span><br><span class=\"line\">                <span class=\"attr\">first</span>: one,</span><br><span class=\"line\">                <span class=\"attr\">second</span>: two,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"comment\">//某个目录/xxx 下一共三个 &lt;router-view&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">// 第一个没有name属性 显示为 test组件</span></span><br><span class=\"line\">            <span class=\"comment\">// 第二个 name为 first 显示组件one</span></span><br><span class=\"line\">            <span class=\"comment\">// 第三个 name为 second 显示组件two </span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n","prev":{"title":"VueRouter的路径匹配引擎介绍","link":"post/2021/202103/VueRouter路径匹配引擎"},"next":{"title":"Vue生命周期钩子","link":"post/2021/202103/Vue生命周期"},"plink":"http://blog.lipanpanx.com/post/2021/202103/VueRouter基本使用/","toc":[{"id":"vuerouter基本使用步骤","title":"VueRouter基本使用步骤","index":"1"},{"id":"vuerouter的下载和引入","title":"VueRouter的下载和引入","index":"2"},{"id":"组件准备","title":"组件准备","index":"3"},{"id":"vuerouter实例的创建","title":"VueRouter实例的创建","index":"4"},{"id":"<router-view>和<router-link>","title":"&lt;router-view&gt;和&lt;router-link&gt;","index":"5"},{"id":"添加各种形式的组件路由规则","title":"添加各种形式的组件路由规则","index":"6","children":[{"id":"一般路由","title":"一般路由","index":"6.1"},{"id":"动态路由","title":"动态路由","index":"6.2"},{"id":"命名路由","title":"命名路由","index":"6.3"},{"id":"重定向路由","title":"重定向路由","index":"6.4"},{"id":"路由别名","title":"路由别名","index":"6.5"},{"id":"嵌套路由","title":"嵌套路由","index":"6.6"},{"id":"命名视图相关的路由","title":"命名视图相关的路由","index":"6.7"}]}],"reward":true,"copyright":{"author":"李攀攀","link":"<a href=\"http://blog.lipanpanx.com/post/2021/202103/VueRouter基本使用/\" title=\"VueRouter基本使用\">http://blog.lipanpanx.com/post/2021/202103/VueRouter基本使用/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"},"reading_time":"2164 字约 14 分钟"}