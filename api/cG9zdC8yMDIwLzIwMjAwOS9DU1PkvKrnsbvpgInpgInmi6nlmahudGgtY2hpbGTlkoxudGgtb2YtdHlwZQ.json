{"title":"CSS伪类 child-indexed 伪类 与 typed child-indexed 伪类","date":"2020-09-02T11:16:12.000Z","date_formatted":{"ll":"2020年9月2日","L":"2020/09/02","MM-DD":"09-02"},"link":"post/2020/202009/CSS伪类选选择器nth-child和nth-of-type","tags":["CSS","伪类"],"categories":["CSS相关"],"updated":"2022-01-16T00:35:15.352Z","content":"<p>参考文档:<br>\n<a href=\"https://drafts.csswg.org/selectors/#structural-pseudos\" target=\"_blank\">selectors level 4(WD-&gt;WD) Tree-Structural pseudo-classes</a><br>\n<a href=\"https://www.w3.org/TR/selectors-3/#structural-pseudos\" target=\"_blank\">selctors level 3(REC-&gt;REC) Structural pseudo-classes</a></p>\n<p>这篇文章讲一下 child-indexed伪类选择器 和 typed child-indexed伪类选择器的区别与联系:</p>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">child-indexed 伪类</th>\n<th style=\"text-align:center\">typed child-indexed 伪类</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-child\" target=\"_blank\">:nth-child</a></td>\n<td style=\"text-align:center\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-of-type\" target=\"_blank\">:nth-of-type</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#\">:nth-last-child</a></td>\n<td style=\"text-align:center\"><a href=\"#\">:nth-last-type</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#\">:first-child   </a></td>\n<td style=\"text-align:center\"><a href=\"#\">:first-of-type</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#\">:last-child    </a></td>\n<td style=\"text-align:center\"><a href=\"#\">:last-of-type </a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#\">:only-child    </a></td>\n<td style=\"text-align:center\"><a href=\"#\">:only-of-type </a></td>\n</tr>\n</tbody>\n</table></div></div><p>我相信正常人都能看得出来左右2栏 是一一对应的关系, 也就是说<code>child-indexed伪类选择器</code>和<code>typed child-indexed伪类选择器</code>选择元素的思想 其实是大同小异的 学会一种另外一种也就会了</p>\n<p>假设我们有一个类名 为 .first 的div, 这个div里面装满了各种html元素 <code>&lt;span&gt;</code> <code>&lt;em&gt;</code> 等等, 添加一些基础样式, 然后我们就用这个 初始环境 来做实验:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;first&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Span 1!<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Span 2<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Span 3!<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Span 4<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Span 5!<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Span 6<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>Span 7!<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span> EM 0<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>EM 1<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">span</span>, <span class=\"selector-tag\">div</span>  <span class=\"selector-tag\">em</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid green;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在没有使用选择器之前 渲染结果如下:<br>\n<img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/QpdUzMm.png\" alt=\"\" loading=\"lazy\"></p>\n<hr>\n<h2 id=\":nth-child()\">:nth-child()<a title=\"#:nth-child()\" href=\"#:nth-child()\"></a></h2>\n<p>使用如下选择器增加样式:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-class\">.first</span> <span class=\"selector-tag\">span</span><span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">2</span>n+<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: lime;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/0q7sQyO.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>可以看到 按照 1,3,5,7… 这种规则把选中的span 背景变为了 lime<br>\n第9个元素 由于 不是span 所以背景没有发生变化</p>\n<p>此时如果我们在第三个span的前面增加 一个 em 会发生什么呢?<br>\n<img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/bRaYCq9.png\" alt=\"\" loading=\"lazy\"></p>\n<p>我们可以看到 现在第三个元素 由于不是span 而被 直接跳过  渲染结果为 第1,5,7,9,11…的背景为lime<br>\n这样以来 我们就可以看出 <code>child-indexed 伪类选择器</code>的计数规则是对所有的兄弟元素计数<br>\n然后只操作符合自己选择规则的元素, 对于那些虽然被计数规则命中 但是不符合选择器规则的 元素 不进行任何操作</p>\n<h2 id=\":nth-last-child()\">:nth-last-child()<a title=\"#:nth-last-child()\" href=\"#:nth-last-child()\"></a></h2>\n<p>恢复初始环境 增加如下 样式:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-class\">.first</span> <span class=\"selector-tag\">span</span><span class=\"selector-pseudo\">:nth-last-child</span>(<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background-color</span>: blue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/iFWLqsx.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>结果 最后一个元素变成蓝色了 当我们把1 改成2之后蓝色消失  再把2改成4之后效果如下：<br>\n<img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/O3n1r4x.png\" alt=\"\" loading=\"lazy\"></p>\n<p>可以看到 :nth-last-child() 采用的是 反序计数的方式</p>\n<h2 id=\":first-child-和-:last-child\">:first-child 和 :last-child<a title=\"#:first-child-和-:last-child\" href=\"#:first-child-和-:last-child\"></a></h2>\n<p>从字面意思上就可以看的出来 :first-child 选择第一个元素 :last-child选择最后一个元素</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-class\">.first</span> <span class=\"selector-tag\">span</span><span class=\"selector-pseudo\">:first</span>-child&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-class\">.first</span> <span class=\"selector-tag\">span</span><span class=\"selector-pseudo\">:last-child</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background-color</span>: orange;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/UW7gKSH.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<blockquote>\n<p>这里有个非常重要的注意点:<br>\n在 a 不是 root 元素的前提下  a:first-child 和 * &gt; a:first-child 是等同的(这里表示a是任何元素的第一个child)</p>\n</blockquote>\n<h2 id=\":only-child\">:only-child<a title=\"#:only-child\" href=\"#:only-child\"></a></h2>\n<p>这个 :only-child 则只选择那些 没有兄弟元素的元素 在我们的基础环境当中 EM1 它的左侧是一个包含EM0的span 右侧是 span8 毫无疑问它有兄弟元素  而EM0 被 一个span 包裹 且这个span仅有一个子元素 所以当我们添加如下样式的时候:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-class\">.first</span> <span class=\"selector-tag\">em</span><span class=\"selector-pseudo\">:only-child</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">background-color</span>: cyan;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/zh2EX9F.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<p>我们看到仅仅 EM0被选中了</p>\n<h2 id=\"typed-child-indexed-伪类选择器\">typed child-indexed 伪类选择器<a title=\"#typed-child-indexed-伪类选择器\" href=\"#typed-child-indexed-伪类选择器\"></a></h2>\n<p><code>typed child-indexed 伪类选择器</code> 和 <code>child-indexed伪类选择器</code> 仅仅有一点区别 这点区别是啥呢?<br>\n其实也很简单 就是 对被选择元素的计数规则不同, <code>child-indexed伪类选择器</code> 采取的策略是依次对所有的元素进行计数, 而<code>typed child-indexed 伪类选择器</code>采取的策略 则是仅仅对相应类型的元素进行计数:</p>\n<p>比如在上面的基础环境当中:<br>\ndiv.first span:nth-child(2n+1) : 会找到.first下的所有的奇数位置上的元素然后再判断是不是span,确实是span之后进行操作,如果不是span则不进行任何操作<br>\ndiv.first span:nth-of-type(2n+1): 首先遍历 .first下的所有span 然后按照先后顺序对span进行排序,之后再去已经排序完成的span队列当中找到 奇数位置上的span  进行操作</p>\n<p>上面我们不是有个增加em的例子:<br>\n<img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/bRaYCq9.png\" alt=\"\" loading=\"lazy\"><br>\n这里当我们把 nth-child 换成 nth-of-type 之后效果如下:<br>\n<img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/T3TS76t.png\" alt=\"\" loading=\"lazy\"></p>\n<p>因为 <code>child-indexed伪类选择器</code> 和 <code>typed child-indexed 伪类选择器</code> 家族的几个伪类选择器的差异是完全相同的我这里就不在对其他的选择器进行举例说明.</p>\n<h2 id=\"非常需要注意的点\"><code>非常需要注意的点</code><a title=\"#非常需要注意的点\" href=\"#非常需要注意的点\"></a></h2>\n<blockquote>\n<p>无论是 <code>child-indexed伪类选择器</code> 还是 <code>typed child-indexed 伪类选择器</code>  他们仅仅对兄弟元素进行计数</p>\n</blockquote>\n<blockquote>\n<p>对于 <code>child-indexed伪类选择器</code> 如果某个元素只命中计数规则 而没有命中选择器规则, 则不会进行任何操作 你看不出来任何选择器被应用的迹象</p>\n</blockquote>\n<blockquote>\n<p>在旧的标准当中 :first-child :last-child :only-child 和 :first-of-type :last-of-type :only-of-type 这几个伪类选择器 选中的元素都必须 有一个父元素  但是在 selectors level 4 标准中 被选中的元素的父元素 却不是必须的</p>\n</blockquote>\n<blockquote>\n<p>在 a 不是 root 元素的前提下  a:first-child 和 * &gt; a:first-child 是等同的(这里表示a是任何元素的第一个child), 同理 div:nth-child(x)  等同于 * &gt; div:nth-child(x).<br>\n这里有个非常有趣的例子:</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-tag\">body</span> <span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">:first</span>-child&#123;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"attribute\">background-color</span>: pink;</span></span><br><span class=\"line\"><span class=\"css\">  &#125;<span class=\"comment\">/*在这里 body div:first-child 的效果与 * &gt; div:first-child(div:first-child)的效果是相同的 */</span></span></span><br><span class=\"line\"><span class=\"css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;item&quot;</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","prev":{"title":"CSS3 HTML5 多端可用性检查工具","link":"post/2020/202009/CSS3-HTML5-多端可用性检查工具"},"next":{"title":"CSS选择器","link":"post/2020/202009/CSS选择器"},"plink":"http://blog.lipanpanx.com/post/2020/202009/CSS伪类选选择器nth-child和nth-of-type/","toc":[{"id":":nth-child()","title":":nth-child()","index":"1"},{"id":":nth-last-child()","title":":nth-last-child()","index":"2"},{"id":":first-child-和-:last-child","title":":first-child 和 :last-child","index":"3"},{"id":":only-child","title":":only-child","index":"4"},{"id":"typed-child-indexed-伪类选择器","title":"typed child-indexed 伪类选择器","index":"5"},{"id":"非常需要注意的点","title":"非常需要注意的点","index":"6"}],"reward":true,"copyright":{"author":"李攀攀","link":"<a href=\"http://blog.lipanpanx.com/post/2020/202009/CSS伪类选选择器nth-child和nth-of-type/\" title=\"CSS伪类 child-indexed 伪类 与 typed child-indexed 伪类\">http://blog.lipanpanx.com/post/2020/202009/CSS伪类选选择器nth-child和nth-of-type/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"},"reading_time":"1585 字约 11 分钟"}