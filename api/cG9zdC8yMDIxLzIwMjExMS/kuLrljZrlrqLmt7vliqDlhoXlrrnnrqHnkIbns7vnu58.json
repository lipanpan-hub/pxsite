{"title":"Hexo+Inside+Github+(NetlifyCMS+Verce+Cloudflare)构建全球可高速访问的静态站点","date":"2021-11-16T07:27:20.000Z","date_formatted":{"ll":"2021年11月16日","L":"2021/11/16","MM-DD":"11-16"},"thumbnail":"https://search.pstatic.net/common/?src=https://i.imgur.com/USr2l3A.jpg","link":"post/2021/202111/为博客添加内容管理系统","categories":["其他"],"updated":"2021-11-20T01:15:00.036Z","content":"<h2 id=\"0x10-前情提要\">0x10 前情提要<a title=\"#0x10-前情提要\" href=\"#0x10-前情提要\"></a></h2>\n<p>我的博客一直以来都是静态的站点,静态的站点优点还是很多的,很多地方提供免费的托管服务,访问速度快,搜索引擎友好,等等. 但是有优点就有缺点,静态站点的缺点也很明显,无法承载过于复杂的功能,就个人博客而言,如果做成动态网站有管理后台的那种的话就可以随时随地写文章更新文章了,想对文章进行更改校对,任何一个有网的地方登陆后台就可以操作其实还是很爽的,所以我决定给我的静态站点添加一个后台管理系统就是netlifyCMS,这个netlifyCMS是netlify公司的产品, 这个东西可以让你方便的在线 管理 书写 发布你的文章,我尝试了一下效果还是不错的.</p>\n<p><img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/nSJwqhi.png\" alt=\"\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"0x20-开始搞,netlify用起来\">0x20 开始搞,netlify用起来<a title=\"#0x20-开始搞,netlify用起来\" href=\"#0x20-开始搞,netlify用起来\"></a></h2>\n<p>因为 netlifyCMS是netlify公司的展品, 刚开始我不知道我还以为要想使用netlifyCMS就必须把站点放到netlify上面去才行,于是就开始折腾netlify,其实把站点放到netlify上还是比较简单的,我这里简单的讲一下:</p>\n<ol>\n<li>首先注册netlify账号 因为它可以使用第三方账号进行注册,我的项目都在githu上我就选择了直接用github账号进行注册</li>\n<li>然后就是选择git仓库创建网站,这里也很简单 按照它的提示一步步来就醒了 总共三步<br>\n<img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/zqzMPur.png\" alt=\"\" loading=\"lazy\"><br>\n最后一步这里 你可以选择git仓库的分支, 可以设置安装依赖和运行构建命令的目录, 以及最后保存静态文件部署静态站点的文件夹,当然 这里也可以 设置环境变量 设置serverless 函数的文件夹 不过我们用不着 这两个也就不用管它了.</li>\n</ol>\n<blockquote>\n<p>这里有个非常蛋疼的点 就是这里可以选择一个目录 作为你安装依赖和运行构建命令的目录,但是如果我的项目当中 包含了一个子项目 需要多处安装依赖,然后需要多处运行构建命令呢? 我不知道针对套娃项目 如何在netlify中部署 至少我暂时没有看到设置的地方. 这一点我觉得vercel就做到很好,在vercel当中你可以自己去设置安装依赖和构建项目的命令,这样的话对于需要多处安装依赖的项目你直接可以把命令写在packge.json的scripts当中 然后提交给vercel一个运行script的命令就行了 比如你的script设置成为<code>&quot;vercel_install&quot;: &quot;npm install &amp;&amp; cd themes/inside &amp;&amp; npm install&quot;</code>,然后把 <code>npm run vercel_install</code> 提交给vercel就行了.</p>\n</blockquote>\n<ol start=\"3\">\n<li>最后选择 <code>deploy site</code>,就能把你的网站部署到netlify上面了,是不是很简单</li>\n</ol>\n<p><strong>然后网站部署完成之后就可以把netlifyCMS给搞上了 也非常的简单:</strong></p>\n<ol>\n<li>首先进入到你的站点 然后点击 <code>site setting</code>进入到你的网站的设置页面<br>\n<img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/NnGGuTC.png\" alt=\"\" loading=\"lazy\"><br>\n<img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/MGbyKEO.png\" alt=\"\" loading=\"lazy\"></li>\n<li>我们看到网站的设置页面有很多的选项可以设置,我们首先打开身份验证服务,选择<code>identity</code>然后点击<code>enable identity</code>即可<br>\n<img src=\"https://search.pstatic.net/common/?src=https://i.imgur.com/JwMT7EJ.png\" alt=\"\" loading=\"lazy\"></li>\n<li>既然后端的验证服务有了我们就需要前端的身份验证页面,前端的验证页面也很简单<br>\n对于hexo框架而言 首先在项目根目录的 source文件夹下面创建admin文件夹 然后里面放上两个文件<code>index.html</code> 和 <code>config.yml</code>,其中index.html是前端验证页面的入口,config.yml是 netlifyCMS的配置文件,netlifyCMS可以根据这个配置文件来确定以怎样的方式去读取和操作文章<br>\n我们直接在index.html 中添加下面的代码</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Content Manager<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">href</span>=<span class=\"string\">config.yml</span> <span class=\"attr\">type</span>=<span class=\"string\">text/yaml</span> <span class=\"attr\">rel</span>=<span class=\"string\">cms-config-url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://identity.netlify.com/v1/netlify-identity-widget.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Include the script that builds the page and powers Netlify CMS --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/netlify-cms@^2.0.0/dist/netlify-cms.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这段代码就是加载两个js文件,一个用来渲染CMS的页面一个用来进行身份验证<br>\n因为我们最终需要 通过  <a href=\"http://lipanpanx.com/admin/\">lipanpanx.com/admin/</a> 去访问到CMS, 所以admin文件夹最终会被放到hexo所生成的网站的根目录当中,为了避免hexo对admin文件夹进行过多的操作,我们在hexo的配置文件的 <code>skip_render</code>字段当中添加<code>- admin/**</code>,确保hexo不对admin文件夹当中的内容进行渲染.</p>\n","next":{"title":"netlify-cli安装E404错误(找不到依赖项)解决","link":"post/2021/202111/netlify-cli安装教程"},"plink":"http://lipanpanx.com/post/2021/202111/为博客添加内容管理系统/","toc":[{"id":"0x10-前情提要","title":"0x10 前情提要","index":"1"},{"id":"0x20-开始搞,netlify用起来","title":"0x20 开始搞,netlify用起来","index":"2"}],"reward":true,"copyright":{"author":"李攀攀","link":"<a href=\"http://lipanpanx.com/post/2021/202111/为博客添加内容管理系统/\" title=\"Hexo+Inside+Github+(NetlifyCMS+Verce+Cloudflare)构建全球可高速访问的静态站点\">http://lipanpanx.com/post/2021/202111/为博客添加内容管理系统/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"},"reading_time":"1269 字约 8 分钟"}